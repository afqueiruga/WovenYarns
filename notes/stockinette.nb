(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    246036,       5172]
NotebookOptionsPosition[    243492,       5086]
NotebookOutlinePosition[    243868,       5103]
CellTagsIndexPosition[    243825,       5100]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"XXX", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"a", "+", 
      RowBox[{"sq", " ", "a"}]}], ",", "\[IndentingNewLine]", "0", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"A1", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"p", " ", "a"}], " ", "]"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E1", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1.0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E2", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1.0"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6370028254821577`*^9, 3.637002828401903*^9}, {
  3.637004179141327*^9, 3.637004216703279*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"XXX", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"0", ",", "\[IndentingNewLine]", 
     RowBox[{"a", "+", 
      RowBox[{"sq", " ", "a"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"A1", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"p", " ", "a"}], " ", "]"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E2", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0.0", ",", "1.0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.0"}], ",", "0", ",", "0"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.637004219272605*^9, {3.637004513181039*^9, 3.637004521092813*^9}, {
   3.637008363625671*^9, 3.637008392797916*^9}, {3.637008445802931*^9, 
   3.637008447675758*^9}, {3.637008480805944*^9, 3.637008497810747*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"period", "=", 
    RowBox[{"Pi", "*", 
     RowBox[{"4.5", "/", "3"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"squeeze", "=", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"3", "-", "2"}], ")"}]}], "/", "3"}]}], "\[IndentingNewLine]", 
   
   RowBox[{"amp", " ", "=", " ", 
    RowBox[{"3", "/", "4."}]}], "\[IndentingNewLine]", 
   RowBox[{"over", "=", 
    RowBox[{"2", "/", "5."}]}], "\[IndentingNewLine]", 
   RowBox[{"XXX", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"a", "+", 
       RowBox[{"o", "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"p", "   ", "a"}], "]"}]}], "+", 
       RowBox[{"sq", " ", "a"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"A1", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"1", "/", "2.0"}], " ", "p", " ", "a"}], "  ", "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"A2", " ", 
       RowBox[{"Cos", "[", " ", 
        RowBox[{"p", "  ", "a"}], "]"}]}]}], "}"}]}], "\[IndentingNewLine]", 
   RowBox[{"E1", "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1.0", ",", "0"}], "}"}]}], "\[IndentingNewLine]", 
   RowBox[{"E2", "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "1.0"}], "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.635204359494279*^9, 3.635204374054832*^9}, {
  3.635573329209114*^9, 3.6355733486552143`*^9}, {3.635573406357977*^9, 
  3.6355734142625732`*^9}, {3.6356164410379257`*^9, 3.635616455948292*^9}, {
  3.635617390146954*^9, 3.63561740462525*^9}, {3.635617444278287*^9, 
  3.635617467328568*^9}, {3.6356175022855663`*^9, 3.635617534924334*^9}, {
  3.637008439897067*^9, 3.637008444301055*^9}}],

Cell[BoxData["4.71238898038469`"], "Output",
 CellChangeTimes->{
  3.635616457361623*^9, 3.635617406790691*^9, {3.63561750904358*^9, 
   3.635617535431407*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["1", "3"]}]], "Output",
 CellChangeTimes->{
  3.635616457361623*^9, 3.635617406790691*^9, {3.63561750904358*^9, 
   3.6356175354327393`*^9}}],

Cell[BoxData["0.75`"], "Output",
 CellChangeTimes->{
  3.635616457361623*^9, 3.635617406790691*^9, {3.63561750904358*^9, 
   3.6356175354337187`*^9}}],

Cell[BoxData["0.4`"], "Output",
 CellChangeTimes->{
  3.635616457361623*^9, 3.635617406790691*^9, {3.63561750904358*^9, 
   3.635617535434679*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "+", 
    RowBox[{"a", " ", "sq"}], "+", 
    RowBox[{"o", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"a", " ", "p"}], "]"}]}]}], ",", 
   RowBox[{"A1", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"0.5`", " ", "a", " ", "p"}], "]"}]}], ",", 
   RowBox[{"A2", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"a", " ", "p"}], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.635616457361623*^9, 3.635617406790691*^9, {3.63561750904358*^9, 
   3.635617535435855*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1.`", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.635616457361623*^9, 3.635617406790691*^9, {3.63561750904358*^9, 
   3.635617535437006*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "1.`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.635616457361623*^9, 3.635617406790691*^9, {3.63561750904358*^9, 
   3.635617535438043*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sqrt", "[", 
  RowBox[{"Total", "[", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"XXX", ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "1"}], "}"}]}], "]"}], "^", "2"}], "]"}], 
  "]"}]], "Input"],

Cell[BoxData[
 SqrtBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "sq", "+", 
      RowBox[{"o", " ", "p", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"a", " ", "p"}], "]"}]}]}], ")"}], "2"], "+", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    SuperscriptBox["A1", "2"], " ", 
    SuperscriptBox["p", "2"], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", 
      FractionBox[
       RowBox[{"a", " ", "p"}], "2"], "]"}], "2"]}], "+", 
   RowBox[{
    SuperscriptBox["A2", "2"], " ", 
    SuperscriptBox["p", "2"], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", 
      RowBox[{"a", " ", "p"}], "]"}], "2"]}]}]]], "Output",
 CellChangeTimes->{3.635574204803722*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sqrt", "[", 
     RowBox[{"Total", "[", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{"XXX", ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "1"}], "}"}]}], "]"}], "^", "2"}], "]"}], "]"}], 
    "\[Equal]", "1"}], ",", 
   RowBox[{"{", "o", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6355740820909157`*^9, 3.635574082695156*^9}, {
  3.635574146604554*^9, 3.6355741748667192`*^9}, {3.635574240668704*^9, 
  3.635574274545391*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"o", "\[Rule]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "4"}], " ", "p", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"a", " ", "p"}], "]"}]}], "-", 
        RowBox[{"4", " ", "p", " ", "sq", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"a", " ", "p"}], "]"}]}], "-", 
        RowBox[{
         SqrtBox["2"], " ", 
         RowBox[{"\[Sqrt]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"8", " ", 
             SuperscriptBox["p", "2"], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"a", " ", "p"}], "]"}], "2"]}], "-", 
            RowBox[{
             SuperscriptBox["A1", "2"], " ", 
             SuperscriptBox["p", "4"], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"a", " ", "p"}], "]"}], "2"]}], "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["A2", "2"], " ", 
             SuperscriptBox["p", "4"], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"a", " ", "p"}], "]"}], "2"]}], "+", 
            RowBox[{
             SuperscriptBox["A1", "2"], " ", 
             SuperscriptBox["p", "4"], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"a", " ", "p"}], "]"}], "3"]}], "+", 
            RowBox[{"4", " ", 
             SuperscriptBox["A2", "2"], " ", 
             SuperscriptBox["p", "4"], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"a", " ", "p"}], "]"}], "2"], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "a", " ", "p"}], "]"}]}]}], ")"}]}]}]}], 
       ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["p", "2"], "+", 
          RowBox[{
           SuperscriptBox["p", "2"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "a", " ", "p"}], "]"}]}]}], ")"}]}], ")"}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"o", "\[Rule]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "4"}], " ", "p", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"a", " ", "p"}], "]"}]}], "-", 
        RowBox[{"4", " ", "p", " ", "sq", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"a", " ", "p"}], "]"}]}], "+", 
        RowBox[{
         SqrtBox["2"], " ", 
         RowBox[{"\[Sqrt]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"8", " ", 
             SuperscriptBox["p", "2"], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"a", " ", "p"}], "]"}], "2"]}], "-", 
            RowBox[{
             SuperscriptBox["A1", "2"], " ", 
             SuperscriptBox["p", "4"], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"a", " ", "p"}], "]"}], "2"]}], "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["A2", "2"], " ", 
             SuperscriptBox["p", "4"], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"a", " ", "p"}], "]"}], "2"]}], "+", 
            RowBox[{
             SuperscriptBox["A1", "2"], " ", 
             SuperscriptBox["p", "4"], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"a", " ", "p"}], "]"}], "3"]}], "+", 
            RowBox[{"4", " ", 
             SuperscriptBox["A2", "2"], " ", 
             SuperscriptBox["p", "4"], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"a", " ", "p"}], "]"}], "2"], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "a", " ", "p"}], "]"}]}]}], ")"}]}]}]}], 
       ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["p", "2"], "+", 
          RowBox[{
           SuperscriptBox["p", "2"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "a", " ", "p"}], "]"}]}]}], ")"}]}], ")"}]}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.635574175612977*^9, {3.635574269790784*^9, 3.6355742751024446`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"W1", "=", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"Cross", "[", 
      RowBox[{"E2", ",", 
       RowBox[{"D", "[", 
        RowBox[{"XXX", ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "1"}], "}"}]}], "]"}]}], "]"}], "+", 
     RowBox[{"0.1", " ", "E1"}]}], 
    RowBox[{"Sqrt", "[", 
     RowBox[{"Total", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cross", "[", 
          RowBox[{"E2", ",", 
           RowBox[{"D", "[", 
            RowBox[{"XXX", ",", 
             RowBox[{"{", 
              RowBox[{"a", ",", "1"}], "}"}]}], "]"}]}], "]"}], "+", 
         RowBox[{"0.1", " ", "E1"}]}], ")"}], "^", "2"}], "]"}], "]"}]], "//",
    "Simplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"W2", "=", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"Cross", "[", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{"XXX", ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "1"}], "}"}]}], "]"}], ",", "W1"}], "]"}], "+", 
     RowBox[{"0.1", " ", "E2"}]}], 
    RowBox[{"Sqrt", "[", 
     RowBox[{"Total", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cross", "[", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{"XXX", ",", 
             RowBox[{"{", 
              RowBox[{"a", ",", "1"}], "}"}]}], "]"}], ",", "W1"}], "]"}], 
         "+", 
         RowBox[{"0.1", " ", "E2"}]}], ")"}], "^", "2"}], "]"}], "]"}]], "//",
    "Simplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"d1", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"W1", "-", "E1"}], ")"}], "//", 
   "Simplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"d2", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"W2", "-", "E2"}], ")"}], "//", "Simplify"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQ3XCTU0BU7LWjWtUJBRCd+s9Kyw9Icx/eC6ZnKZ1z
BNGeqRFOIDqrrC4CRD+9pBwJosVWXE0D0arRX8C0lHFGCYjuSNGrB9F6D1hb
QLRI7t12EB3OwbsaRLc77VwLosVldx4G0W9ezjkKVrdk0XkQnST6/xqI3uPh
ZxgHpD1q3xiD6HeTyy1B9DGX33Yg+vqrTStB9BaBW2B6J9dT6QQg/c+mQxZE
b0hwngiiv8s9nwKibxQX7AfRr0QsD4HoC6sPz0gC0pVn7s4G0WECfB7JQPrH
zFJPEF1QNnNzCpDuDmjcBqIBVH6Ixg==
  "]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"-", "1.1`"}], "-", 
     RowBox[{"1.`", " ", "sq"}]}], 
    SqrtBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1.1`", "\[VeryThinSpace]", "+", 
        RowBox[{"1.`", " ", "sq"}]}], ")"}], "2"]]], ",", "0.`", ",", "0.`"}],
   "}"}]], "Output",
 CellChangeTimes->{{3.635456163931624*^9, 3.635456179327505*^9}, {
   3.6354562347107983`*^9, 3.6354562625901337`*^9}, 3.6355730795618563`*^9, 
   3.6355732677746773`*^9, 3.635573449980495*^9, 3.6355735611408653`*^9, 
   3.635573695757554*^9, 3.635573726668119*^9, {3.635573795596487*^9, 
   3.635573823596779*^9}, {3.6355741120686073`*^9, 3.635574126201795*^9}, 
   3.6355743176744204`*^9, 3.635574456545813*^9, 3.6356059736708813`*^9, 
   3.635606008438612*^9, 3.63560686567614*^9, 3.6356098407383738`*^9, 
   3.6356107937488413`*^9, 3.635611156649336*^9, 3.635614943789793*^9, {
   3.635616333308457*^9, 3.635616350104978*^9}, 3.6356164617264223`*^9, 
   3.635619253343195*^9, 3.637002975695714*^9, 3.637004224555361*^9, 
   3.637004269179553*^9, 3.637004527018821*^9, 3.637008405315495*^9, 
   3.637008450296324*^9, {3.63700848552347*^9, 3.637008500716959*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", 
   FractionBox[
    RowBox[{"A1", " ", "p", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.1`"}], "-", 
       RowBox[{"1.`", " ", "sq"}]}], ")"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"a", " ", "p"}], "]"}]}], 
    RowBox[{
     SqrtBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1.1`", "\[VeryThinSpace]", "+", 
         RowBox[{"1.`", " ", "sq"}]}], ")"}], "2"]], " ", 
     SqrtBox[
      RowBox[{
       FractionBox[
        RowBox[{"1.0000000000000002`", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1.1`", "\[VeryThinSpace]", "+", 
            RowBox[{"2.1`", " ", "sq"}], "+", 
            RowBox[{"1.`", " ", 
             SuperscriptBox["sq", "2"]}], "+", 
            RowBox[{"0.1`", " ", 
             SqrtBox[
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1.1`", "\[VeryThinSpace]", "+", 
                 RowBox[{"1.`", " ", "sq"}]}], ")"}], "2"]]}]}], ")"}], 
          "2"]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1.1`", "\[VeryThinSpace]", "+", 
           RowBox[{"1.`", " ", "sq"}]}], ")"}], "2"]], "+", 
       RowBox[{"1.`", " ", 
        SuperscriptBox["A1", "2"], " ", 
        SuperscriptBox["p", "2"], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", 
          RowBox[{"a", " ", "p"}], "]"}], "2"]}]}]]}]], ",", 
   FractionBox[
    RowBox[{"0.1`", " ", 
     RowBox[{"(", 
      RowBox[{"11.`", "\[VeryThinSpace]", "+", 
       RowBox[{"21.`", " ", "sq"}], "+", 
       RowBox[{"10.`", " ", 
        SuperscriptBox["sq", "2"]}], "+", 
       RowBox[{"1.`", " ", 
        SqrtBox[
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1.1`", "\[VeryThinSpace]", "+", 
            RowBox[{"1.`", " ", "sq"}]}], ")"}], "2"]]}]}], ")"}]}], 
    RowBox[{
     SqrtBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1.1`", "\[VeryThinSpace]", "+", 
         RowBox[{"1.`", " ", "sq"}]}], ")"}], "2"]], " ", 
     SqrtBox[
      RowBox[{
       FractionBox[
        RowBox[{"1.0000000000000002`", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1.1`", "\[VeryThinSpace]", "+", 
            RowBox[{"2.1`", " ", "sq"}], "+", 
            RowBox[{"1.`", " ", 
             SuperscriptBox["sq", "2"]}], "+", 
            RowBox[{"0.1`", " ", 
             SqrtBox[
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1.1`", "\[VeryThinSpace]", "+", 
                 RowBox[{"1.`", " ", "sq"}]}], ")"}], "2"]]}]}], ")"}], 
          "2"]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1.1`", "\[VeryThinSpace]", "+", 
           RowBox[{"1.`", " ", "sq"}]}], ")"}], "2"]], "+", 
       RowBox[{"1.`", " ", 
        SuperscriptBox["A1", "2"], " ", 
        SuperscriptBox["p", "2"], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", 
          RowBox[{"a", " ", "p"}], "]"}], "2"]}]}]]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.635456163931624*^9, 3.635456179327505*^9}, {
   3.6354562347107983`*^9, 3.6354562625901337`*^9}, 3.6355730795618563`*^9, 
   3.6355732677746773`*^9, 3.635573449980495*^9, 3.6355735611408653`*^9, 
   3.635573695757554*^9, 3.635573726668119*^9, {3.635573795596487*^9, 
   3.635573823596779*^9}, {3.6355741120686073`*^9, 3.635574126201795*^9}, 
   3.6355743176744204`*^9, 3.635574456545813*^9, 3.6356059736708813`*^9, 
   3.635606008438612*^9, 3.63560686567614*^9, 3.6356098407383738`*^9, 
   3.6356107937488413`*^9, 3.635611156649336*^9, 3.635614943789793*^9, {
   3.635616333308457*^9, 3.635616350104978*^9}, 3.6356164617264223`*^9, 
   3.635619253343195*^9, 3.637002975695714*^9, 3.637004224555361*^9, 
   3.637004269179553*^9, 3.637004527018821*^9, 3.637008405315495*^9, 
   3.637008450296324*^9, {3.63700848552347*^9, 3.6370085007600307`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1.`", "\[VeryThinSpace]", "+", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "1.1`"}], "-", 
      RowBox[{"1.`", " ", "sq"}]}], 
     SqrtBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1.1`", "\[VeryThinSpace]", "+", 
         RowBox[{"1.`", " ", "sq"}]}], ")"}], "2"]]]}], ",", "0.`", ",", 
   "0.`"}], "}"}]], "Output",
 CellChangeTimes->{{3.635456163931624*^9, 3.635456179327505*^9}, {
   3.6354562347107983`*^9, 3.6354562625901337`*^9}, 3.6355730795618563`*^9, 
   3.6355732677746773`*^9, 3.635573449980495*^9, 3.6355735611408653`*^9, 
   3.635573695757554*^9, 3.635573726668119*^9, {3.635573795596487*^9, 
   3.635573823596779*^9}, {3.6355741120686073`*^9, 3.635574126201795*^9}, 
   3.6355743176744204`*^9, 3.635574456545813*^9, 3.6356059736708813`*^9, 
   3.635606008438612*^9, 3.63560686567614*^9, 3.6356098407383738`*^9, 
   3.6356107937488413`*^9, 3.635611156649336*^9, 3.635614943789793*^9, {
   3.635616333308457*^9, 3.635616350104978*^9}, 3.6356164617264223`*^9, 
   3.635619253343195*^9, 3.637002975695714*^9, 3.637004224555361*^9, 
   3.637004269179553*^9, 3.637004527018821*^9, 3.637008405315495*^9, 
   3.637008450296324*^9, {3.63700848552347*^9, 3.637008500761428*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", 
   FractionBox[
    RowBox[{"A1", " ", "p", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1.1`"}], "-", 
       RowBox[{"1.`", " ", "sq"}]}], ")"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"a", " ", "p"}], "]"}]}], 
    RowBox[{
     SqrtBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1.1`", "\[VeryThinSpace]", "+", 
         RowBox[{"1.`", " ", "sq"}]}], ")"}], "2"]], " ", 
     SqrtBox[
      RowBox[{
       FractionBox[
        RowBox[{"1.0000000000000002`", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1.1`", "\[VeryThinSpace]", "+", 
            RowBox[{"2.1`", " ", "sq"}], "+", 
            RowBox[{"1.`", " ", 
             SuperscriptBox["sq", "2"]}], "+", 
            RowBox[{"0.1`", " ", 
             SqrtBox[
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1.1`", "\[VeryThinSpace]", "+", 
                 RowBox[{"1.`", " ", "sq"}]}], ")"}], "2"]]}]}], ")"}], 
          "2"]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1.1`", "\[VeryThinSpace]", "+", 
           RowBox[{"1.`", " ", "sq"}]}], ")"}], "2"]], "+", 
       RowBox[{"1.`", " ", 
        SuperscriptBox["A1", "2"], " ", 
        SuperscriptBox["p", "2"], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", 
          RowBox[{"a", " ", "p"}], "]"}], "2"]}]}]]}]], ",", 
   RowBox[{
    RowBox[{"-", "1.`"}], "+", 
    FractionBox[
     RowBox[{"0.1`", " ", 
      RowBox[{"(", 
       RowBox[{"11.`", "\[VeryThinSpace]", "+", 
        RowBox[{"21.`", " ", "sq"}], "+", 
        RowBox[{"10.`", " ", 
         SuperscriptBox["sq", "2"]}], "+", 
        RowBox[{"1.`", " ", 
         SqrtBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1.1`", "\[VeryThinSpace]", "+", 
             RowBox[{"1.`", " ", "sq"}]}], ")"}], "2"]]}]}], ")"}]}], 
     RowBox[{
      SqrtBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1.1`", "\[VeryThinSpace]", "+", 
          RowBox[{"1.`", " ", "sq"}]}], ")"}], "2"]], " ", 
      SqrtBox[
       RowBox[{
        FractionBox[
         RowBox[{"1.0000000000000002`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1.1`", "\[VeryThinSpace]", "+", 
             RowBox[{"2.1`", " ", "sq"}], "+", 
             RowBox[{"1.`", " ", 
              SuperscriptBox["sq", "2"]}], "+", 
             RowBox[{"0.1`", " ", 
              SqrtBox[
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1.1`", "\[VeryThinSpace]", "+", 
                  RowBox[{"1.`", " ", "sq"}]}], ")"}], "2"]]}]}], ")"}], 
           "2"]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1.1`", "\[VeryThinSpace]", "+", 
            RowBox[{"1.`", " ", "sq"}]}], ")"}], "2"]], "+", 
        RowBox[{"1.`", " ", 
         SuperscriptBox["A1", "2"], " ", 
         SuperscriptBox["p", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"a", " ", "p"}], "]"}], "2"]}]}]]}]]}]}], "}"}]], "Output",\

 CellChangeTimes->{{3.635456163931624*^9, 3.635456179327505*^9}, {
   3.6354562347107983`*^9, 3.6354562625901337`*^9}, 3.6355730795618563`*^9, 
   3.6355732677746773`*^9, 3.635573449980495*^9, 3.6355735611408653`*^9, 
   3.635573695757554*^9, 3.635573726668119*^9, {3.635573795596487*^9, 
   3.635573823596779*^9}, {3.6355741120686073`*^9, 3.635574126201795*^9}, 
   3.6355743176744204`*^9, 3.635574456545813*^9, 3.6356059736708813`*^9, 
   3.635606008438612*^9, 3.63560686567614*^9, 3.6356098407383738`*^9, 
   3.6356107937488413`*^9, 3.635611156649336*^9, 3.635614943789793*^9, {
   3.635616333308457*^9, 3.635616350104978*^9}, 3.6356164617264223`*^9, 
   3.635619253343195*^9, 3.637002975695714*^9, 3.637004224555361*^9, 
   3.637004269179553*^9, 3.637004527018821*^9, 3.637008405315495*^9, 
   3.637008450296324*^9, {3.63700848552347*^9, 3.637008500802225*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"W1", "=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"XXX", ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "2"}], "}"}]}], "]"}], "/", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"Total", "[", 
     RowBox[{"D", "[", 
      RowBox[{"XXX", ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "2"}], "}"}]}], "]"}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.635199371284589*^9, 3.635199413086157*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"o", " ", 
      SuperscriptBox["p", "2"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"a", " ", "p"}], "]"}]}], 
     SqrtBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "4"]}], " ", "A1", " ", 
        SuperscriptBox["p", "2"], " ", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"a", " ", "p"}], "2"], "]"}]}], "-", 
       RowBox[{"A2", " ", 
        SuperscriptBox["p", "2"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"a", " ", "p"}], "]"}]}], "-", 
       RowBox[{"o", " ", 
        SuperscriptBox["p", "2"], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"a", " ", "p"}], "]"}]}]}]]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"A1", " ", 
      SuperscriptBox["p", "2"], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"a", " ", "p"}], "2"], "]"}]}], 
     RowBox[{"4", " ", 
      SqrtBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "4"]}], " ", "A1", " ", 
         SuperscriptBox["p", "2"], " ", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"a", " ", "p"}], "2"], "]"}]}], "-", 
        RowBox[{"A2", " ", 
         SuperscriptBox["p", "2"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"a", " ", "p"}], "]"}]}], "-", 
        RowBox[{"o", " ", 
         SuperscriptBox["p", "2"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"a", " ", "p"}], "]"}]}]}]]}]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"A2", " ", 
      SuperscriptBox["p", "2"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"a", " ", "p"}], "]"}]}], 
     SqrtBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "4"]}], " ", "A1", " ", 
        SuperscriptBox["p", "2"], " ", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"a", " ", "p"}], "2"], "]"}]}], "-", 
       RowBox[{"A2", " ", 
        SuperscriptBox["p", "2"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"a", " ", "p"}], "]"}]}], "-", 
       RowBox[{"o", " ", 
        SuperscriptBox["p", "2"], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"a", " ", "p"}], "]"}]}]}]]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.63519940030396*^9, 3.6351994134218597`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"V1", "=", 
  RowBox[{
   RowBox[{"Cross", "[", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"XXX", ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "1"}], "}"}]}], "]"}], ",", 
     RowBox[{"D", "[", 
      RowBox[{"XXX", ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "2"}], "}"}]}], "]"}]}], "]"}], "/", 
   "\[IndentingNewLine]", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"Total", "[", " ", 
     RowBox[{
      RowBox[{"Cross", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"XXX", ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "1"}], "}"}]}], "]"}], ",", 
        RowBox[{"D", "[", 
         RowBox[{"XXX", ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "2"}], "}"}]}], "]"}]}], "]"}], "^", "2"}], " ", 
     "]"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"V2", "=", 
  RowBox[{
   RowBox[{"Cross", "[", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"XXX", ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "1"}], "}"}]}], "]"}], ",", "V1"}], "]"}], "/", 
   "\[IndentingNewLine]", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"Total", "[", " ", 
     RowBox[{
      RowBox[{"Cross", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"XXX", ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "1"}], "}"}]}], "]"}], ",", "V1"}], "]"}], "^", 
      "2"}], " ", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"d1", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"V1", "-", "E1"}], "//", "Simplify"}], ")"}], "//.", 
   RowBox[{
    RowBox[{"Sec", "[", "x_", "]"}], "\[RuleDelayed]", 
    RowBox[{"1", "/", 
     RowBox[{"Cos", "[", "x", "]"}]}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"d2", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"V2", "-", "E2"}], "//", "Simplify"}], ")"}], "//.", 
   RowBox[{
    RowBox[{"Sec", "[", "x_", "]"}], "\[RuleDelayed]", 
    RowBox[{"1", "/", 
     RowBox[{"Cos", "[", "x", "]"}]}]}]}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], " ", "A1", " ", "A2", " ", 
       SuperscriptBox["p", "3"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"a", " ", "p"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"a", " ", "p"}], "2"], "]"}]}], "-", 
      RowBox[{
       FractionBox["1", "4"], " ", "A1", " ", "A2", " ", 
       SuperscriptBox["p", "3"], " ", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"a", " ", "p"}], "2"], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"a", " ", "p"}], "]"}]}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"\[Sqrt]", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            FractionBox["1", "2"], " ", "A1", " ", "A2", " ", 
            SuperscriptBox["p", "3"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"a", " ", "p"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             FractionBox[
              RowBox[{"a", " ", "p"}], "2"], "]"}]}], "-", 
           RowBox[{
            FractionBox["1", "4"], " ", "A1", " ", "A2", " ", 
            SuperscriptBox["p", "3"], " ", 
            RowBox[{"Cos", "[", 
             FractionBox[
              RowBox[{"a", " ", "p"}], "2"], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"a", " ", "p"}], "]"}]}]}], ")"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "4"]}], " ", "A1", " ", 
            SuperscriptBox["p", "2"], " ", 
            RowBox[{"Cos", "[", 
             FractionBox[
              RowBox[{"a", " ", "p"}], "2"], "]"}]}], "-", 
           RowBox[{
            FractionBox["1", "4"], " ", "A1", " ", 
            SuperscriptBox["p", "2"], " ", "sq", " ", 
            RowBox[{"Cos", "[", 
             FractionBox[
              RowBox[{"a", " ", "p"}], "2"], "]"}]}], "-", 
           RowBox[{
            FractionBox["1", "4"], " ", "A1", " ", "o", " ", 
            SuperscriptBox["p", "3"], " ", 
            RowBox[{"Cos", "[", 
             FractionBox[
              RowBox[{"a", " ", "p"}], "2"], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"a", " ", "p"}], "]"}]}], "-", 
           RowBox[{
            FractionBox["1", "2"], " ", "A1", " ", "o", " ", 
            SuperscriptBox["p", "3"], " ", 
            RowBox[{"Sin", "[", 
             FractionBox[
              RowBox[{"a", " ", "p"}], "2"], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"a", " ", "p"}], "]"}]}]}], ")"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"A2", " ", 
            SuperscriptBox["p", "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"a", " ", "p"}], "]"}]}], "+", 
           RowBox[{"A2", " ", 
            SuperscriptBox["p", "2"], " ", "sq", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"a", " ", "p"}], "]"}]}], "+", 
           RowBox[{"A2", " ", "o", " ", 
            SuperscriptBox["p", "3"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{"a", " ", "p"}], "]"}], "2"]}], "+", 
           RowBox[{"A2", " ", "o", " ", 
            SuperscriptBox["p", "3"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", 
              RowBox[{"a", " ", "p"}], "]"}], "2"]}]}], ")"}], "2"]}], 
       ")"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"A2", " ", 
       SuperscriptBox["p", "2"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"a", " ", "p"}], "]"}]}], "+", 
      RowBox[{"A2", " ", 
       SuperscriptBox["p", "2"], " ", "sq", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"a", " ", "p"}], "]"}]}], "+", 
      RowBox[{"A2", " ", "o", " ", 
       SuperscriptBox["p", "3"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         RowBox[{"a", " ", "p"}], "]"}], "2"]}], "+", 
      RowBox[{"A2", " ", "o", " ", 
       SuperscriptBox["p", "3"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         RowBox[{"a", " ", "p"}], "]"}], "2"]}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"\[Sqrt]", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            FractionBox["1", "2"], " ", "A1", " ", "A2", " ", 
            SuperscriptBox["p", "3"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"a", " ", "p"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             FractionBox[
              RowBox[{"a", " ", "p"}], "2"], "]"}]}], "-", 
           RowBox[{
            FractionBox["1", "4"], " ", "A1", " ", "A2", " ", 
            SuperscriptBox["p", "3"], " ", 
            RowBox[{"Cos", "[", 
             FractionBox[
              RowBox[{"a", " ", "p"}], "2"], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"a", " ", "p"}], "]"}]}]}], ")"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "4"]}], " ", "A1", " ", 
            SuperscriptBox["p", "2"], " ", 
            RowBox[{"Cos", "[", 
             FractionBox[
              RowBox[{"a", " ", "p"}], "2"], "]"}]}], "-", 
           RowBox[{
            FractionBox["1", "4"], " ", "A1", " ", 
            SuperscriptBox["p", "2"], " ", "sq", " ", 
            RowBox[{"Cos", "[", 
             FractionBox[
              RowBox[{"a", " ", "p"}], "2"], "]"}]}], "-", 
           RowBox[{
            FractionBox["1", "4"], " ", "A1", " ", "o", " ", 
            SuperscriptBox["p", "3"], " ", 
            RowBox[{"Cos", "[", 
             FractionBox[
              RowBox[{"a", " ", "p"}], "2"], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"a", " ", "p"}], "]"}]}], "-", 
           RowBox[{
            FractionBox["1", "2"], " ", "A1", " ", "o", " ", 
            SuperscriptBox["p", "3"], " ", 
            RowBox[{"Sin", "[", 
             FractionBox[
              RowBox[{"a", " ", "p"}], "2"], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"a", " ", "p"}], "]"}]}]}], ")"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"A2", " ", 
            SuperscriptBox["p", "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"a", " ", "p"}], "]"}]}], "+", 
           RowBox[{"A2", " ", 
            SuperscriptBox["p", "2"], " ", "sq", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"a", " ", "p"}], "]"}]}], "+", 
           RowBox[{"A2", " ", "o", " ", 
            SuperscriptBox["p", "3"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{"a", " ", "p"}], "]"}], "2"]}], "+", 
           RowBox[{"A2", " ", "o", " ", 
            SuperscriptBox["p", "3"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", 
              RowBox[{"a", " ", "p"}], "]"}], "2"]}]}], ")"}], "2"]}], 
       ")"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "4"]}], " ", "A1", " ", 
       SuperscriptBox["p", "2"], " ", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"a", " ", "p"}], "2"], "]"}]}], "-", 
      RowBox[{
       FractionBox["1", "4"], " ", "A1", " ", 
       SuperscriptBox["p", "2"], " ", "sq", " ", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"a", " ", "p"}], "2"], "]"}]}], "-", 
      RowBox[{
       FractionBox["1", "4"], " ", "A1", " ", "o", " ", 
       SuperscriptBox["p", "3"], " ", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"a", " ", "p"}], "2"], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"a", " ", "p"}], "]"}]}], "-", 
      RowBox[{
       FractionBox["1", "2"], " ", "A1", " ", "o", " ", 
       SuperscriptBox["p", "3"], " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"a", " ", "p"}], "2"], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"a", " ", "p"}], "]"}]}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"\[Sqrt]", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            FractionBox["1", "2"], " ", "A1", " ", "A2", " ", 
            SuperscriptBox["p", "3"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"a", " ", "p"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             FractionBox[
              RowBox[{"a", " ", "p"}], "2"], "]"}]}], "-", 
           RowBox[{
            FractionBox["1", "4"], " ", "A1", " ", "A2", " ", 
            SuperscriptBox["p", "3"], " ", 
            RowBox[{"Cos", "[", 
             FractionBox[
              RowBox[{"a", " ", "p"}], "2"], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"a", " ", "p"}], "]"}]}]}], ")"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "4"]}], " ", "A1", " ", 
            SuperscriptBox["p", "2"], " ", 
            RowBox[{"Cos", "[", 
             FractionBox[
              RowBox[{"a", " ", "p"}], "2"], "]"}]}], "-", 
           RowBox[{
            FractionBox["1", "4"], " ", "A1", " ", 
            SuperscriptBox["p", "2"], " ", "sq", " ", 
            RowBox[{"Cos", "[", 
             FractionBox[
              RowBox[{"a", " ", "p"}], "2"], "]"}]}], "-", 
           RowBox[{
            FractionBox["1", "4"], " ", "A1", " ", "o", " ", 
            SuperscriptBox["p", "3"], " ", 
            RowBox[{"Cos", "[", 
             FractionBox[
              RowBox[{"a", " ", "p"}], "2"], "]"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"a", " ", "p"}], "]"}]}], "-", 
           RowBox[{
            FractionBox["1", "2"], " ", "A1", " ", "o", " ", 
            SuperscriptBox["p", "3"], " ", 
            RowBox[{"Sin", "[", 
             FractionBox[
              RowBox[{"a", " ", "p"}], "2"], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"a", " ", "p"}], "]"}]}]}], ")"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"A2", " ", 
            SuperscriptBox["p", "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"a", " ", "p"}], "]"}]}], "+", 
           RowBox[{"A2", " ", 
            SuperscriptBox["p", "2"], " ", "sq", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"a", " ", "p"}], "]"}]}], "+", 
           RowBox[{"A2", " ", "o", " ", 
            SuperscriptBox["p", "3"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{"a", " ", "p"}], "]"}], "2"]}], "+", 
           RowBox[{"A2", " ", "o", " ", 
            SuperscriptBox["p", "3"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", 
              RowBox[{"a", " ", "p"}], "]"}], "2"]}]}], ")"}], "2"]}], 
       ")"}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.635199176451799*^9, 3.635204516057014*^9}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   PanelBox[GridBox[{
      {
       StyleBox[
        StyleBox[
         DynamicBox[ToBoxes[
           FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
           StandardForm],
          ImageSizeCache->{278., {2., 8.}}],
         StripOnInput->False,
         DynamicUpdating->True], "Panel",
        StripOnInput->False,
        Background->None]},
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["A1", "4"], " ", 
                 SuperscriptBox["p", "3"], " ", 
                 SuperscriptBox[
                  RowBox[{"Cos", "[", 
                   FractionBox[
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "2"], "]"}], "3"], " ", 
                 RowBox[{"Sin", "[", 
                  FractionBox[
                   RowBox[{"a", " ", "p"}], "2"], "]"}]}], ")"}], "/", 
               RowBox[{"(", 
                RowBox[{"8", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    SuperscriptBox["A1", "2"], " ", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]}], 
                   "+", 
                   RowBox[{"\[LeftSkeleton]", "23", "\[RightSkeleton]"}]}], 
                  ")"}], " ", 
                 RowBox[{"\[Sqrt]", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"\[LeftSkeleton]", "4", "\[RightSkeleton]"}], " ", 
                    RowBox[{"Sin", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}]}], "-", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]}], 
                    ")"}], "2"], "+", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    ")"}], "2"], "+", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    ")"}], "2"]}], ")"}]}]}], ")"}]}], "+", 
              FractionBox[
               RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
               RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]], "+", 
              RowBox[{"\[LeftSkeleton]", "113", "\[RightSkeleton]"}], "+", 
              FractionBox[
               RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
               RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]], "+", 
              FractionBox[
               RowBox[{"16", " ", 
                RowBox[{"\[LeftSkeleton]", "3", "\[RightSkeleton]"}], " ", 
                SuperscriptBox[
                 RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "7"]}], 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], ")"}], 
                " ", 
                SqrtBox[
                 RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]]}]]}], 
             ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"\[Sqrt]", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["A1", "3"], " ", 
                    SuperscriptBox["p", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "3"]}], 
                    RowBox[{"4", " ", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], " ", 
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]}], 
                    "2"], "+", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "+", 
                    RowBox[{
                    "\[LeftSkeleton]", "1", "\[RightSkeleton]"}]}]]}]], "+", 
                   RowBox[{"\[LeftSkeleton]", "157", "\[RightSkeleton]"}], 
                   "+", 
                   FractionBox[
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]}]]}],
                   ")"}], "2"], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]], 
                   "+", 
                   RowBox[{"\[LeftSkeleton]", "158", "\[RightSkeleton]"}]}], 
                  ")"}], "2"], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    RowBox[{"8", " ", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    SqrtBox[
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]]}]], 
                   "+", 
                   RowBox[{"\[LeftSkeleton]", "116", "\[RightSkeleton]"}]}], 
                  ")"}], "2"]}], ")"}]}], ")"}]}], ",", 
           FractionBox[
            RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
            SqrtBox[
             RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]]], ",", 
           FractionBox[
            RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
            RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]]}], "}"}],
         Short[#, 5]& ],
        Background->GrayLevel[1],
        BaseStyle->{Deployed -> False},
        Frame->True,
        FrameStyle->GrayLevel[0, 0.2],
        StripOnInput->False]},
      {
       RowBox[{
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
             StandardForm],
            ImageSizeCache->{49., {1., 8.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 48, 28568332964043108681, 5/2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
             StandardForm],
            ImageSizeCache->{52., {1., 8.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 48, 28568332964043108681, 5 2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
             StandardForm],
            ImageSizeCache->{82., {2., 8.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 48, 28568332964043108681, Infinity],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
             StandardForm],
            ImageSizeCache->{74., {1., 8.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>FrontEndExecute[{
            FrontEnd`SetOptions[
            FrontEnd`$FrontEnd, 
             FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
            FrontEnd`FrontEndToken["PreferencesDialog"]}],
         Evaluator->None,
         Method->"Preemptive"]}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[1.2]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    DefaultBaseStyle->{},
    FrameMargins->5],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[48]]], "Output",
 CellChangeTimes->{3.635199176451799*^9, 3.63520451967809*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", " ", "A1", " ", "A2", " ", 
       SuperscriptBox["p", "3"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         FractionBox[
          RowBox[{"a", " ", "p"}], "2"], "]"}], "3"]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"\[Sqrt]", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["p", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["A1", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"a", " ", "p"}], "2"], "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "o", " ", "p"}], "+", "sq", "-", 
               RowBox[{"o", " ", "p", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"a", " ", "p"}], "]"}]}]}], ")"}], "2"]}], "+", 
           RowBox[{"16", " ", 
            SuperscriptBox["A2", "2"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"o", " ", "p"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", "sq"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"a", " ", "p"}], "]"}]}]}], ")"}], "2"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["A1", "2"], " ", 
            SuperscriptBox["A2", "2"], " ", 
            SuperscriptBox["p", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"a", " ", "p"}], "2"], "]"}], "6"]}]}], ")"}]}], 
        ")"}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"4", " ", "A2", " ", 
       SuperscriptBox["p", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"o", " ", "p"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "sq"}], ")"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"a", " ", "p"}], "]"}]}]}], ")"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"\[Sqrt]", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["p", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["A1", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"a", " ", "p"}], "2"], "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "o", " ", "p"}], "+", "sq", "-", 
               RowBox[{"o", " ", "p", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"a", " ", "p"}], "]"}]}]}], ")"}], "2"]}], "+", 
           RowBox[{"16", " ", 
            SuperscriptBox["A2", "2"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"o", " ", "p"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", "sq"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"a", " ", "p"}], "]"}]}]}], ")"}], "2"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["A1", "2"], " ", 
            SuperscriptBox["A2", "2"], " ", 
            SuperscriptBox["p", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"a", " ", "p"}], "2"], "]"}], "6"]}]}], ")"}]}], 
        ")"}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"A1", " ", 
      SuperscriptBox["p", "2"], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"a", " ", "p"}], "2"], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "-", 
        RowBox[{"2", " ", "o", " ", "p"}], "-", "sq", "+", 
        RowBox[{"o", " ", "p", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"a", " ", "p"}], "]"}]}]}], ")"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"\[Sqrt]", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["p", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["A1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", 
             FractionBox[
              RowBox[{"a", " ", "p"}], "2"], "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"2", " ", "o", " ", "p"}], "+", "sq", "-", 
              RowBox[{"o", " ", "p", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"a", " ", "p"}], "]"}]}]}], ")"}], "2"]}], "+", 
          RowBox[{"16", " ", 
           SuperscriptBox["A2", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"o", " ", "p"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "+", "sq"}], ")"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"a", " ", "p"}], "]"}]}]}], ")"}], "2"]}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["A1", "2"], " ", 
           SuperscriptBox["A2", "2"], " ", 
           SuperscriptBox["p", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", 
             FractionBox[
              RowBox[{"a", " ", "p"}], "2"], "]"}], "6"]}]}], ")"}]}], 
       ")"}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.635199176451799*^9, 3.6352045209907637`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", " ", 
      SuperscriptBox["p", "3"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"16", " ", 
         SuperscriptBox["A2", "2"], " ", "o", " ", "p"}], "+", 
        RowBox[{
         SuperscriptBox["A1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "o", " ", "p"}], "+", "sq"}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["A1", "2"]}], " ", "o", " ", "p"}], "+", 
           RowBox[{"16", " ", 
            SuperscriptBox["A2", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "sq"}], ")"}]}]}], ")"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"a", " ", "p"}], "]"}]}]}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"a", " ", "p"}], "]"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Sqrt]", 
       RowBox[{"(", 
        RowBox[{"8", "+", 
         RowBox[{
          SuperscriptBox["A1", "2"], " ", 
          SuperscriptBox["p", "2"]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["A2", "2"], " ", 
          SuperscriptBox["p", "2"]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["o", "2"], " ", 
          SuperscriptBox["p", "2"]}], "+", 
         RowBox[{"16", " ", "sq"}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["sq", "2"]}], "+", 
         RowBox[{"p", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["A1", "2"]}], " ", "p"}], "+", 
            RowBox[{"16", " ", "o", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "sq"}], ")"}]}]}], ")"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"a", " ", "p"}], "]"}]}], "-", 
         RowBox[{"4", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["A2", "2"], "-", 
            SuperscriptBox["o", "2"]}], ")"}], " ", 
          SuperscriptBox["p", "2"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "a", " ", "p"}], "]"}]}]}], ")"}]}], " ", 
      RowBox[{"\[Sqrt]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["p", "4"]}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", 
            SuperscriptBox["A1", "2"]}], "-", 
           RowBox[{"64", " ", 
            SuperscriptBox["A2", "2"]}], "-", 
           RowBox[{"12", " ", 
            SuperscriptBox["A1", "2"], " ", "o", " ", "p"}], "-", 
           RowBox[{"10", " ", 
            SuperscriptBox["A1", "2"], " ", 
            SuperscriptBox["A2", "2"], " ", 
            SuperscriptBox["p", "2"]}], "-", 
           RowBox[{"10", " ", 
            SuperscriptBox["A1", "2"], " ", 
            SuperscriptBox["o", "2"], " ", 
            SuperscriptBox["p", "2"]}], "-", 
           RowBox[{"128", " ", 
            SuperscriptBox["A2", "2"], " ", 
            SuperscriptBox["o", "2"], " ", 
            SuperscriptBox["p", "2"]}], "-", 
           RowBox[{"8", " ", 
            SuperscriptBox["A1", "2"], " ", "sq"}], "-", 
           RowBox[{"128", " ", 
            SuperscriptBox["A2", "2"], " ", "sq"}], "-", 
           RowBox[{"12", " ", 
            SuperscriptBox["A1", "2"], " ", "o", " ", "p", " ", "sq"}], "-", 
           RowBox[{"4", " ", 
            SuperscriptBox["A1", "2"], " ", 
            SuperscriptBox["sq", "2"]}], "-", 
           RowBox[{"64", " ", 
            SuperscriptBox["A2", "2"], " ", 
            SuperscriptBox["sq", "2"]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"256", " ", 
               SuperscriptBox["A2", "2"], " ", "o", " ", "p", " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", "sq"}], ")"}]}], "+", 
              RowBox[{
               SuperscriptBox["A1", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "15"}], " ", 
                  SuperscriptBox["A2", "2"], " ", 
                  SuperscriptBox["p", "2"]}], "+", 
                 RowBox[{"3", " ", 
                  SuperscriptBox["o", "2"], " ", 
                  SuperscriptBox["p", "2"]}], "+", 
                 RowBox[{"8", " ", "o", " ", "p", " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "+", "sq"}], ")"}]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"1", "+", "sq"}], ")"}], "2"]}]}], ")"}]}]}], 
             ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"a", " ", "p"}], "]"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["A1", "2"]}], " ", "o", " ", "p", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", 
                 RowBox[{"3", " ", "o", " ", "p"}], "+", 
                 RowBox[{"2", " ", "sq"}]}], ")"}]}], "+", 
              RowBox[{
               SuperscriptBox["A2", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"3", " ", 
                  SuperscriptBox["A1", "2"], " ", 
                  SuperscriptBox["p", "2"]}], "+", 
                 RowBox[{"32", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"1", "+", "sq"}], ")"}], "2"]}]}], ")"}]}]}], 
             ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "a", " ", "p"}], "]"}]}], "+", 
           RowBox[{
            SuperscriptBox["A1", "2"], " ", 
            SuperscriptBox["A2", "2"], " ", 
            SuperscriptBox["p", "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"3", " ", "a", " ", "p"}], "]"}]}], "-", 
           RowBox[{
            SuperscriptBox["A1", "2"], " ", 
            SuperscriptBox["o", "2"], " ", 
            SuperscriptBox["p", "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"3", " ", "a", " ", "p"}], "]"}]}]}], ")"}]}], ")"}]}]}],
      ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"4", " ", "A1", " ", 
      SuperscriptBox["p", "2"], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"a", " ", "p"}], "2"], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"4", " ", "o", " ", "p"}], "+", 
        RowBox[{"3", " ", 
         SuperscriptBox["A2", "2"], " ", 
         SuperscriptBox["p", "2"]}], "-", 
        RowBox[{
         SuperscriptBox["o", "2"], " ", 
         SuperscriptBox["p", "2"]}], "+", 
        RowBox[{"4", " ", "sq"}], "+", 
        RowBox[{"4", " ", "o", " ", "p", " ", "sq"}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["sq", "2"]}], "-", 
        RowBox[{"4", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["A2", "2"], "-", 
           SuperscriptBox["o", "2"]}], ")"}], " ", 
         SuperscriptBox["p", "2"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"a", " ", "p"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["A2", "2"], "-", 
           SuperscriptBox["o", "2"]}], ")"}], " ", 
         SuperscriptBox["p", "2"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "a", " ", "p"}], "]"}]}]}], ")"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Sqrt]", 
       RowBox[{"(", 
        RowBox[{"8", "+", 
         RowBox[{
          SuperscriptBox["A1", "2"], " ", 
          SuperscriptBox["p", "2"]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["A2", "2"], " ", 
          SuperscriptBox["p", "2"]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["o", "2"], " ", 
          SuperscriptBox["p", "2"]}], "+", 
         RowBox[{"16", " ", "sq"}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["sq", "2"]}], "+", 
         RowBox[{"p", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["A1", "2"]}], " ", "p"}], "+", 
            RowBox[{"16", " ", "o", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "sq"}], ")"}]}]}], ")"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"a", " ", "p"}], "]"}]}], "-", 
         RowBox[{"4", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["A2", "2"], "-", 
            SuperscriptBox["o", "2"]}], ")"}], " ", 
          SuperscriptBox["p", "2"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "a", " ", "p"}], "]"}]}]}], ")"}]}], " ", 
      RowBox[{"\[Sqrt]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["p", "4"]}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", 
            SuperscriptBox["A1", "2"]}], "-", 
           RowBox[{"64", " ", 
            SuperscriptBox["A2", "2"]}], "-", 
           RowBox[{"12", " ", 
            SuperscriptBox["A1", "2"], " ", "o", " ", "p"}], "-", 
           RowBox[{"10", " ", 
            SuperscriptBox["A1", "2"], " ", 
            SuperscriptBox["A2", "2"], " ", 
            SuperscriptBox["p", "2"]}], "-", 
           RowBox[{"10", " ", 
            SuperscriptBox["A1", "2"], " ", 
            SuperscriptBox["o", "2"], " ", 
            SuperscriptBox["p", "2"]}], "-", 
           RowBox[{"128", " ", 
            SuperscriptBox["A2", "2"], " ", 
            SuperscriptBox["o", "2"], " ", 
            SuperscriptBox["p", "2"]}], "-", 
           RowBox[{"8", " ", 
            SuperscriptBox["A1", "2"], " ", "sq"}], "-", 
           RowBox[{"128", " ", 
            SuperscriptBox["A2", "2"], " ", "sq"}], "-", 
           RowBox[{"12", " ", 
            SuperscriptBox["A1", "2"], " ", "o", " ", "p", " ", "sq"}], "-", 
           RowBox[{"4", " ", 
            SuperscriptBox["A1", "2"], " ", 
            SuperscriptBox["sq", "2"]}], "-", 
           RowBox[{"64", " ", 
            SuperscriptBox["A2", "2"], " ", 
            SuperscriptBox["sq", "2"]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"256", " ", 
               SuperscriptBox["A2", "2"], " ", "o", " ", "p", " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", "sq"}], ")"}]}], "+", 
              RowBox[{
               SuperscriptBox["A1", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "15"}], " ", 
                  SuperscriptBox["A2", "2"], " ", 
                  SuperscriptBox["p", "2"]}], "+", 
                 RowBox[{"3", " ", 
                  SuperscriptBox["o", "2"], " ", 
                  SuperscriptBox["p", "2"]}], "+", 
                 RowBox[{"8", " ", "o", " ", "p", " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "+", "sq"}], ")"}]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"1", "+", "sq"}], ")"}], "2"]}]}], ")"}]}]}], 
             ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"a", " ", "p"}], "]"}]}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["A1", "2"]}], " ", "o", " ", "p", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", 
                 RowBox[{"3", " ", "o", " ", "p"}], "+", 
                 RowBox[{"2", " ", "sq"}]}], ")"}]}], "+", 
              RowBox[{
               SuperscriptBox["A2", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"3", " ", 
                  SuperscriptBox["A1", "2"], " ", 
                  SuperscriptBox["p", "2"]}], "+", 
                 RowBox[{"32", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"1", "+", "sq"}], ")"}], "2"]}]}], ")"}]}]}], 
             ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "a", " ", "p"}], "]"}]}], "+", 
           RowBox[{
            SuperscriptBox["A1", "2"], " ", 
            SuperscriptBox["A2", "2"], " ", 
            SuperscriptBox["p", "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"3", " ", "a", " ", "p"}], "]"}]}], "-", 
           RowBox[{
            SuperscriptBox["A1", "2"], " ", 
            SuperscriptBox["o", "2"], " ", 
            SuperscriptBox["p", "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"3", " ", "a", " ", "p"}], "]"}]}]}], ")"}]}], ")"}]}]}],
      ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"48", " ", "A2", " ", "o", " ", 
       SuperscriptBox["p", "3"]}], "-", 
      RowBox[{"3", " ", 
       SuperscriptBox["A1", "2"], " ", "A2", " ", 
       SuperscriptBox["p", "4"]}], "+", 
      RowBox[{"48", " ", "A2", " ", "o", " ", 
       SuperscriptBox["p", "3"], " ", "sq"}], "+", 
      RowBox[{"32", " ", "A2", " ", 
       SuperscriptBox["p", "2"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"a", " ", "p"}], "]"}]}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["A1", "2"], " ", "A2", " ", 
       SuperscriptBox["p", "4"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"a", " ", "p"}], "]"}]}], "+", 
      RowBox[{"32", " ", "A2", " ", 
       SuperscriptBox["o", "2"], " ", 
       SuperscriptBox["p", "4"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"a", " ", "p"}], "]"}]}], "+", 
      RowBox[{"64", " ", "A2", " ", 
       SuperscriptBox["p", "2"], " ", "sq", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"a", " ", "p"}], "]"}]}], "+", 
      RowBox[{"32", " ", "A2", " ", 
       SuperscriptBox["p", "2"], " ", 
       SuperscriptBox["sq", "2"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"a", " ", "p"}], "]"}]}], "+", 
      RowBox[{"16", " ", "A2", " ", "o", " ", 
       SuperscriptBox["p", "3"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "a", " ", "p"}], "]"}]}], "-", 
      RowBox[{
       SuperscriptBox["A1", "2"], " ", "A2", " ", 
       SuperscriptBox["p", "4"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "a", " ", "p"}], "]"}]}], "+", 
      RowBox[{"16", " ", "A2", " ", "o", " ", 
       SuperscriptBox["p", "3"], " ", "sq", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "a", " ", "p"}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{"8", "+", 
          RowBox[{
           SuperscriptBox["A1", "2"], " ", 
           SuperscriptBox["p", "2"]}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["A2", "2"], " ", 
           SuperscriptBox["p", "2"]}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["o", "2"], " ", 
           SuperscriptBox["p", "2"]}], "+", 
          RowBox[{"16", " ", "sq"}], "+", 
          RowBox[{"8", " ", 
           SuperscriptBox["sq", "2"]}], "+", 
          RowBox[{"p", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["A1", "2"]}], " ", "p"}], "+", 
             RowBox[{"16", " ", "o", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", "sq"}], ")"}]}]}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"a", " ", "p"}], "]"}]}], "-", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["A2", "2"], "-", 
             SuperscriptBox["o", "2"]}], ")"}], " ", 
           SuperscriptBox["p", "2"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "a", " ", "p"}], "]"}]}]}], ")"}]}], " ", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["p", "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", 
             SuperscriptBox["A1", "2"]}], "+", 
            RowBox[{"64", " ", 
             SuperscriptBox["A2", "2"]}], "+", 
            RowBox[{"12", " ", 
             SuperscriptBox["A1", "2"], " ", "o", " ", "p"}], "+", 
            RowBox[{"10", " ", 
             SuperscriptBox["A1", "2"], " ", 
             SuperscriptBox["A2", "2"], " ", 
             SuperscriptBox["p", "2"]}], "+", 
            RowBox[{"10", " ", 
             SuperscriptBox["A1", "2"], " ", 
             SuperscriptBox["o", "2"], " ", 
             SuperscriptBox["p", "2"]}], "+", 
            RowBox[{"128", " ", 
             SuperscriptBox["A2", "2"], " ", 
             SuperscriptBox["o", "2"], " ", 
             SuperscriptBox["p", "2"]}], "+", 
            RowBox[{"8", " ", 
             SuperscriptBox["A1", "2"], " ", "sq"}], "+", 
            RowBox[{"128", " ", 
             SuperscriptBox["A2", "2"], " ", "sq"}], "+", 
            RowBox[{"12", " ", 
             SuperscriptBox["A1", "2"], " ", "o", " ", "p", " ", "sq"}], "+", 
            
            RowBox[{"4", " ", 
             SuperscriptBox["A1", "2"], " ", 
             SuperscriptBox["sq", "2"]}], "+", 
            RowBox[{"64", " ", 
             SuperscriptBox["A2", "2"], " ", 
             SuperscriptBox["sq", "2"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"256", " ", 
                SuperscriptBox["A2", "2"], " ", "o", " ", "p", " ", 
                RowBox[{"(", 
                 RowBox[{"1", "+", "sq"}], ")"}]}], "+", 
               RowBox[{
                SuperscriptBox["A1", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "15"}], " ", 
                   SuperscriptBox["A2", "2"], " ", 
                   SuperscriptBox["p", "2"]}], "+", 
                  RowBox[{"3", " ", 
                   SuperscriptBox["o", "2"], " ", 
                   SuperscriptBox["p", "2"]}], "+", 
                  RowBox[{"8", " ", "o", " ", "p", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "sq"}], ")"}]}], "+", 
                  RowBox[{"4", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", "sq"}], ")"}], "2"]}]}], ")"}]}]}], 
              ")"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"a", " ", "p"}], "]"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", 
                 SuperscriptBox["A1", "2"]}], " ", "o", " ", "p", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{"3", " ", "o", " ", "p"}], "+", 
                  RowBox[{"2", " ", "sq"}]}], ")"}]}], "+", 
               RowBox[{
                SuperscriptBox["A2", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"3", " ", 
                   SuperscriptBox["A1", "2"], " ", 
                   SuperscriptBox["p", "2"]}], "+", 
                  RowBox[{"32", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", "sq"}], ")"}], "2"]}]}], ")"}]}]}], 
              ")"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "a", " ", "p"}], "]"}]}], "-", 
            RowBox[{
             SuperscriptBox["A1", "2"], " ", 
             SuperscriptBox["A2", "2"], " ", 
             SuperscriptBox["p", "2"], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"3", " ", "a", " ", "p"}], "]"}]}], "+", 
            RowBox[{
             SuperscriptBox["A1", "2"], " ", 
             SuperscriptBox["o", "2"], " ", 
             SuperscriptBox["p", "2"], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"3", " ", "a", " ", "p"}], "]"}]}]}], ")"}]}], 
         ")"}]}]}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Sqrt]", 
       RowBox[{"(", 
        RowBox[{"8", "+", 
         RowBox[{
          SuperscriptBox["A1", "2"], " ", 
          SuperscriptBox["p", "2"]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["A2", "2"], " ", 
          SuperscriptBox["p", "2"]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["o", "2"], " ", 
          SuperscriptBox["p", "2"]}], "+", 
         RowBox[{"16", " ", "sq"}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["sq", "2"]}], "+", 
         RowBox[{"p", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["A1", "2"]}], " ", "p"}], "+", 
            RowBox[{"16", " ", "o", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "sq"}], ")"}]}]}], ")"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"a", " ", "p"}], "]"}]}], "-", 
         RowBox[{"4", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["A2", "2"], "-", 
            SuperscriptBox["o", "2"]}], ")"}], " ", 
          SuperscriptBox["p", "2"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "a", " ", "p"}], "]"}]}]}], ")"}]}], " ", 
      RowBox[{"\[Sqrt]", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["p", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", 
            SuperscriptBox["A1", "2"]}], "+", 
           RowBox[{"64", " ", 
            SuperscriptBox["A2", "2"]}], "+", 
           RowBox[{"12", " ", 
            SuperscriptBox["A1", "2"], " ", "o", " ", "p"}], "+", 
           RowBox[{"10", " ", 
            SuperscriptBox["A1", "2"], " ", 
            SuperscriptBox["A2", "2"], " ", 
            SuperscriptBox["p", "2"]}], "+", 
           RowBox[{"10", " ", 
            SuperscriptBox["A1", "2"], " ", 
            SuperscriptBox["o", "2"], " ", 
            SuperscriptBox["p", "2"]}], "+", 
           RowBox[{"128", " ", 
            SuperscriptBox["A2", "2"], " ", 
            SuperscriptBox["o", "2"], " ", 
            SuperscriptBox["p", "2"]}], "+", 
           RowBox[{"8", " ", 
            SuperscriptBox["A1", "2"], " ", "sq"}], "+", 
           RowBox[{"128", " ", 
            SuperscriptBox["A2", "2"], " ", "sq"}], "+", 
           RowBox[{"12", " ", 
            SuperscriptBox["A1", "2"], " ", "o", " ", "p", " ", "sq"}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["A1", "2"], " ", 
            SuperscriptBox["sq", "2"]}], "+", 
           RowBox[{"64", " ", 
            SuperscriptBox["A2", "2"], " ", 
            SuperscriptBox["sq", "2"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"256", " ", 
               SuperscriptBox["A2", "2"], " ", "o", " ", "p", " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", "sq"}], ")"}]}], "+", 
              RowBox[{
               SuperscriptBox["A1", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "15"}], " ", 
                  SuperscriptBox["A2", "2"], " ", 
                  SuperscriptBox["p", "2"]}], "+", 
                 RowBox[{"3", " ", 
                  SuperscriptBox["o", "2"], " ", 
                  SuperscriptBox["p", "2"]}], "+", 
                 RowBox[{"8", " ", "o", " ", "p", " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "+", "sq"}], ")"}]}], "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"1", "+", "sq"}], ")"}], "2"]}]}], ")"}]}]}], 
             ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"a", " ", "p"}], "]"}]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["A1", "2"]}], " ", "o", " ", "p", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", 
                 RowBox[{"3", " ", "o", " ", "p"}], "+", 
                 RowBox[{"2", " ", "sq"}]}], ")"}]}], "+", 
              RowBox[{
               SuperscriptBox["A2", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"3", " ", 
                  SuperscriptBox["A1", "2"], " ", 
                  SuperscriptBox["p", "2"]}], "+", 
                 RowBox[{"32", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"1", "+", "sq"}], ")"}], "2"]}]}], ")"}]}]}], 
             ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "a", " ", "p"}], "]"}]}], "-", 
           RowBox[{
            SuperscriptBox["A1", "2"], " ", 
            SuperscriptBox["A2", "2"], " ", 
            SuperscriptBox["p", "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"3", " ", "a", " ", "p"}], "]"}]}], "+", 
           RowBox[{
            SuperscriptBox["A1", "2"], " ", 
            SuperscriptBox["o", "2"], " ", 
            SuperscriptBox["p", "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"3", " ", "a", " ", "p"}], "]"}]}]}], ")"}]}], ")"}]}]}],
      ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.635199176451799*^9, 3.635204555907626*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"YYY", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"XXX", "+", 
     RowBox[{"y1", " ", "W1"}], " ", "+", 
     RowBox[{"y2", " ", "W2"}]}], ")"}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.6354562746121197`*^9, 3.635456288590706*^9}, 
   3.635573465814391*^9, {3.635573643335257*^9, 3.635573645201585*^9}, {
   3.635573840446313*^9, 3.635573843124999*^9}, 3.635616356990408*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "+", 
    RowBox[{"a", " ", "sq"}], "+", 
    FractionBox[
     RowBox[{"A1", " ", "p", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1.1`"}], "-", 
        RowBox[{"1.`", " ", "sq"}]}], ")"}], " ", "y2", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"a", " ", "p"}], "]"}]}], 
     RowBox[{
      SqrtBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1.1`", "\[VeryThinSpace]", "+", 
          RowBox[{"1.`", " ", "sq"}]}], ")"}], "2"]], " ", 
      SqrtBox[
       RowBox[{
        FractionBox[
         RowBox[{"1.0000000000000002`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1.1`", "\[VeryThinSpace]", "+", 
             RowBox[{"2.1`", " ", "sq"}], "+", 
             RowBox[{"1.`", " ", 
              SuperscriptBox["sq", "2"]}], "+", 
             RowBox[{"0.1`", " ", 
              SqrtBox[
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1.1`", "\[VeryThinSpace]", "+", 
                  RowBox[{"1.`", " ", "sq"}]}], ")"}], "2"]]}]}], ")"}], 
           "2"]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1.1`", "\[VeryThinSpace]", "+", 
            RowBox[{"1.`", " ", "sq"}]}], ")"}], "2"]], "+", 
        RowBox[{"1.`", " ", 
         SuperscriptBox["A1", "2"], " ", 
         SuperscriptBox["p", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"a", " ", "p"}], "]"}], "2"]}]}]]}]]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1.1`", "\[VeryThinSpace]", "+", 
       RowBox[{"1.`", " ", "sq"}]}], ")"}], " ", "y1"}], 
    SqrtBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1.1`", "\[VeryThinSpace]", "+", 
        RowBox[{"1.`", " ", "sq"}]}], ")"}], "2"]]], ",", 
   RowBox[{
    FractionBox[
     RowBox[{"0.1`", " ", 
      RowBox[{"(", 
       RowBox[{"11.`", "\[VeryThinSpace]", "+", 
        RowBox[{"21.`", " ", "sq"}], "+", 
        RowBox[{"10.`", " ", 
         SuperscriptBox["sq", "2"]}], "+", 
        RowBox[{"1.`", " ", 
         SqrtBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1.1`", "\[VeryThinSpace]", "+", 
             RowBox[{"1.`", " ", "sq"}]}], ")"}], "2"]]}]}], ")"}], " ", 
      "y2"}], 
     RowBox[{
      SqrtBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1.1`", "\[VeryThinSpace]", "+", 
          RowBox[{"1.`", " ", "sq"}]}], ")"}], "2"]], " ", 
      SqrtBox[
       RowBox[{
        FractionBox[
         RowBox[{"1.0000000000000002`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1.1`", "\[VeryThinSpace]", "+", 
             RowBox[{"2.1`", " ", "sq"}], "+", 
             RowBox[{"1.`", " ", 
              SuperscriptBox["sq", "2"]}], "+", 
             RowBox[{"0.1`", " ", 
              SqrtBox[
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1.1`", "\[VeryThinSpace]", "+", 
                  RowBox[{"1.`", " ", "sq"}]}], ")"}], "2"]]}]}], ")"}], 
           "2"]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1.1`", "\[VeryThinSpace]", "+", 
            RowBox[{"1.`", " ", "sq"}]}], ")"}], "2"]], "+", 
        RowBox[{"1.`", " ", 
         SuperscriptBox["A1", "2"], " ", 
         SuperscriptBox["p", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"a", " ", "p"}], "]"}], "2"]}]}]]}]], "+", 
    RowBox[{"A1", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"a", " ", "p"}], "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.635616359235895*^9, 3.635616478050617*^9, 
  3.635619270943028*^9, 3.637003005367535*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"YYY", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"XXX", "+", 
     RowBox[{"y1", " ", "V1"}], "+", 
     RowBox[{"y2", " ", "V2"}]}], ")"}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.635200148928578*^9, 3.635200174354225*^9}, {
  3.6352064950403423`*^9, 3.635206496895789*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"YYY", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"o", "\[Rule]", "over"}], ",", 
        RowBox[{"A1", "\[Rule]", "amp"}], ",", 
        RowBox[{"A2", "\[Rule]", "amp"}], ",", 
        RowBox[{"sq", "\[Rule]", "squeeze"}], ",", 
        RowBox[{"p", "->", "period"}], ",", 
        RowBox[{"y1", "\[Rule]", "0."}], ",", 
        RowBox[{"y2", "\[Rule]", "0.2"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"YYY", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"o", "\[Rule]", "over"}], ",", 
        RowBox[{"A1", "\[Rule]", "amp"}], ",", 
        RowBox[{"A2", "\[Rule]", "amp"}], ",", 
        RowBox[{"sq", "\[Rule]", "squeeze"}], ",", 
        RowBox[{"p", "->", "period"}], ",", 
        RowBox[{"y1", "\[Rule]", "0.0"}], ",", 
        RowBox[{"y2", "\[Rule]", "0.0"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"YYY", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"o", "\[Rule]", "over"}], ",", 
        RowBox[{"A1", "\[Rule]", "amp"}], ",", 
        RowBox[{"A2", "\[Rule]", "amp"}], ",", 
        RowBox[{"sq", "\[Rule]", "squeeze"}], ",", 
        RowBox[{"p", "->", "period"}], ",", 
        RowBox[{"y1", "\[Rule]", 
         RowBox[{"-", "0."}]}], ",", 
        RowBox[{"y2", "\[Rule]", 
         RowBox[{"-", "0.2"}]}]}], "}"}]}]}], "\[IndentingNewLine]", "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", 
     RowBox[{"-", "3"}], ",", "3"}], " ", "}"}], "\[IndentingNewLine]", ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Thick"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(x\), \(1\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(x\), \(2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(x\), \(3\)]\)\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.635199523149041*^9, 3.635199552674882*^9}, {
   3.635199587033765*^9, 3.6351995927542152`*^9}, {3.6351996480778923`*^9, 
   3.6351996561673107`*^9}, {3.635199731562044*^9, 3.635199805287571*^9}, {
   3.635200028963953*^9, 3.6352000317163687`*^9}, {3.6352002334164553`*^9, 
   3.635200251598132*^9}, {3.635200298920554*^9, 3.6352003011822844`*^9}, {
   3.635206478035488*^9, 3.635206488186664*^9}, {3.635456329714519*^9, 
   3.635456347925386*^9}, {3.635573648560795*^9, 3.635573656328458*^9}, {
   3.635573858355667*^9, 3.6355738757690153`*^9}, {3.6355743412399483`*^9, 
   3.635574344263689*^9}, 3.635574381868487*^9, {3.635574473024495*^9, 
   3.635574476608913*^9}, {3.635606785497034*^9, 3.635606813683655*^9}, 
   3.635610064086685*^9, {3.635611252365054*^9, 3.635611307761073*^9}, {
   3.635615187868884*^9, 3.635615190945285*^9}, {3.635615223264208*^9, 
   3.6356152436040783`*^9}, {3.6356154823397293`*^9, 3.635615490231472*^9}, {
   3.635615900357596*^9, 3.635615903944812*^9}, {3.635617176896038*^9, 
   3.635617197905949*^9}, {3.635617540859784*^9, 3.635617588905031*^9}, {
   3.6356176307525063`*^9, 3.635617647855124*^9}}],

Cell[BoxData[
 Graphics3DBox[{{}, {}, 
   {Thickness[Large], Line3DBox[CompressedData["
1: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
x7skU2syRmD44J7zdLB8ec3dVHcIFNSSpFiI/rCwo/S3vjod6k48Or7v1RAs
KnKPTiAJi7RTQ8316SCw3Xrqybch6Fx33Zi8iYSf1qvvnbejQ3J6sV/b8BBk
he262PSlHVd2H3/WFUMn6vDscQvbYWAkv7DZFtaCf/L0DCJX6XDpr11wpPUI
fMzX0rKUbcFr/2nGUDYy4HzQrWkBvxEIF9zz+3B7M8oLbtBhbGOA9yuBm7sS
R6Dyc41VD1cz+m7M2X7vAAN2/yu54NM/Av0buMNlnjXiwA2+FxtVGdAeH6t5
XH0UTNeHXIzTrcEb/kaWUW8ZsNYolVWcYwzuvd/QWPSmGhvX3gzxCGSALWW+
8N3uMTjD95xrLKMKK5v/u3DyEwM6Wn2aDSXHQLtnI3hurMR7I0y++e8MqOm8
81FFZww+Z3GI2MaXoo/FocFN+QwQ2/hXcUvYGEwa//ye2FCCwUINEqpFDODK
vSBclDgGD6sbaPtnirHEMnhVu5wBl1J9j3TkjsHbxvkNQ/JFaLC+0qy6gQE3
yjTFJToI+xUzjkIB+cg4w330II0BD562P9fayIT30/WTrM25uC2qqOFXPwMk
ch1OcvAyIfLi4+/N23JQZPaxDvcgA1z4vnfw7WbC/eI6AY/An/imzsp8J5MB
QUXHXqkeY8I9z/mzrxsy8dVLzm+V4wxQy746ZSFDrGdeuprNmYEtxpa7L/xj
wNibC9L9wITq1aBTA5tSsOzTI+13swwoaRsNpKgyoSje+4CsawLKlT9puzPP
gF6LjV56mkzQVnpX4jD7A6vpMnvnFxjwVfUp2/GbTFgoDTpYbhGNRk35ArpL
DDgWHx6kr8eErrzrORd7IlGOwpXtuswAXas0UpcBE8J2skpKRn9G+cuaNJsV
Blyb73DPNGLCizmPU1WeQcj9qcX70CoDBq6ZX6eaMEEza5L9FMkTl97yxMcR
/H3dpm1Gd5lwy8Doym+wQytSwalxghvmN0VKmzGBwvD6rF6vD7U+jUdXCL57
s86QIcHVUp273ja7wPs1zwKaCS5cXjzYQ9hp61LcI7feH+jPhe9YEfy7YX18
hikTqkik09xCH8FZyye8hfAzMf+PCsWYCRvC2PbMyoXDn7YvOiwE38qj8e+W
IRO6vd0XtRKigCvc9tM/Qofgr1HdErf/v99H7ilFcZD1te3vsf+/F83ekd58
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

     "]]}, 
   {Thickness[Large], Line3DBox[CompressedData["
1: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
bWs+3oZzyndYfUFMdDE+pNrlXwG/roztV9nehjf4LujyeDDRVv3spcrccnip
xNjHv7wNW/Z4bhG5wkS5+5qWZ5ll4HEqLlu2sxXNQiWaew8zsZvzYuMmv1Jw
6jU9vMmuFY3zyqs8FgYwpLb2jcl4PjTE6uy1i2vBZIqdcLTzAML6Z1vjA9/C
5qgfzXcftmDZx2mP85YDKM3LvqujlQhm31zHlju34LHw0nLhYwMYu2JwuUBH
HGjr6q/KPtyCcg8OayoqDuCjt7wPH0aHQf0gv3/VOAU3R21UtaczMCyg59id
mvt4YmBm0tCBgpovb56WOMTAsVpf5c7LWej6x4ZQOUfBa3EdAuHbGbgVlGZi
zHPwRKXkkseGFJSv3DL/Zy0DGW8eWrjP56KgWptHwXZS/rizxfof/fhsXCZk
2dE81JTavbZ6thk3e8UYJh7tx1/WlUeHuotxczP3zCFOM0ocVHhqI9uPj1ek
9Ed6laKLpWtrfjO5nvOENT/Thzv2Wc91Li3DoNZAcf93zZiwt/NV1bs+fHn1
tctCVjmyO1/Twy41Y2INz+tn/H143OdIh8KvKry0Z+OOvFPNGCyfzatM7cWE
bTZvvxRXY+oDEbemI82YfbVQODa7F+P3JIRzH9dgvcubig6VZhTKdmoXv9CL
Fpeui49sqkXR2BfllbLNWM7TNLeO5KXr6mu6q8Zqcck378jE1c3YazsdwSPc
iz8Pja+SxTo8KarjobqoGQNkRogLn+ioRzvgdMHsG54kskz75puwXqN5cfcj
OvIT6V93yTagurx5iudME1o6xNhtv0hHg4RX6wKGGnDp7rd1AuNNaMY6pHlZ
nY6vQiKf6X1uxFopPwnvX03oTXzPdhem49tbDSfu+DThRJAJo3+wCQufUASu
9NFw6cK2+xJ6zfjiII/79u9NeNfzqv2ujzTcXXTgffBiChY7TMg6cpuwP/eU
GDOQhl/eFPEfvEpB9b8bNodymtBT/5jaNQsa7j1qejGliYJ8S4UxjcQ/ju26
uWkrDZvSktoltFtQ7KWFSicpR1DzWkXePyomKn4Ll3/bgokBsy4rfzShkz/H
XraJiofunVFvXNaKmjoZwVY/mzAsoS7VNp6Kku2SZks9W9HZe+3N4lHS38te
NfevU/G0pWoUh9WKM+Y/RRSmmrBg//NF3vuoeFZ0/cuT5P6sSlsksF6gGa0I
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
     "]]}, 
   {Thickness[Large], Line3DBox[CompressedData["
1:eJwUmnk0VV8UxyUpQ5IiU6g0SYpkriNFwi9JZChJohGJyFgylGTOTEXGSpKZ
2maZ55nn3Tcan8wzv9tfb63POuvcfb93n72/+62zz8L26l1mJiYmURYmps34
b+KGlIa2DXOpx+mTolKrVBQb8LrzypEckNi7x1HiHnMp96UGnRdbaOiNyOih
rX7Z4Dm7obbVgrl0SWyvdAQXDSVKrjjH07JgXe/QUpEBc2lZV0j2LjEaUjI5
uotT7wvQ3z14zHOGuXR07hWftyoNNZgr/hAhxkHZ94e7vnMwl1prKaZlONMQ
y+reFMXW98i6TeI/5fRNpa47nvdbtdBQUsRUdnHDLyTk/F91HJmplPaitqZY
j478236x/NZoQxq57LEdA0yl+xwED702oKPTJ5JN22PakNm5umD2LqZSPge+
gzrGdMSpBGonGW2IdEVlzO4PU6n7zfKWInM6Ckx0SSwMbUdmBy13HvnGVDqw
eaPopC0d2Vwo7+tt60Du0yQ/7WdMpZMrWjV3/eko2WldaeB4N/qS3XlYYBtT
aWRZq+V0AR2dZamsb77Qj5RrPb4qbWIqzV0bbnYqpiMB5t0bRI9+NLF8MLR4
dgNOVfg2/v1FR4SV58w7CvqR84lsMf3eDVAbeS/2q5yOBsbi138fHkDE8dLu
wsQNEDAlzJbU0xHzqTeV5qsDyHRWc2e53AZ03gmcudxPRxJD3lV2LgR0a/dW
gUirdUg4/XVu7C8dyS7acTfeJaLlXMu5PpN1cKqx2tM6RUeqquXzWU+JqObT
yvox3XVY1hsp/TpNR4Ze57/IvySiDqPT6vPy6/B8hHZTc5aO5C+LC52MJaLM
DxNmJ9jXYYhQtcS7QEeasn9iiHVEpP/r6gvi+howLx73y8G5XVTQJUYnEcnO
Vf74MLMG7x1HDmsv4rodDPb/TCSiKTkBY83BNSC/zHhxe4mOTI68WNk+R0Qq
Bcd2qf1Yg3e5MnUKK3QUMOLWMCaAoU02dTJ3UtbgJGlAPAHnb3Ql9hvsx9Cl
kZjFkNg1mDjPdWsN53pqYiWPJTC0dupg2x7fNbCo9zDLWKWjLXHSUlmKGLow
tUj9bboGk4rfZyrX6GidODEXcg1DnGdX/C/qrcFwrNLPDZyv7jyu/84EQ7tc
hBn9Gmtw88J3Mbl1OtJVsf9x1hxDo4NHXh+SwZ+7+cRgBM43FxpHVj/AUIb9
uXV5tjUIvfjw6fENOrpi8HXc0w1DERobP3ZtrMLVO/yq2jjvtkrWVX2BoZdN
e2oWZldBxICoaoXzos0uViWvMJRMZd/aTVyFnxct3MJx3ljavTbyBkML6jvF
WrtWYVahZyMV5zqPygLjAjDE90nfqbVhFQY5UjULcW7P9GiGMwhDIivkMFLB
KrwRTU/oxLmgweLYkTAMmcXyHpvOXAVS3QSBiPOfu8+gznAMEe3+ft6SvApj
t7y1RnHu8Pw+RTUCQ3IP+S2FY1dhiffFzBTObapVRR9FYgiL0qo9HbIKETN9
wws4Z+UePXw9Ctf5Y8EpPb9VSDe6L7eK82dZpRLM0Riy6r67ycZ9FUxEWyjr
OA+JkdJ8jPP5aJ+gt09XQf22+9IGzq1Lg8OjcD7s0qeUfn8Vdo8lPfvHb+Ye
5PfG+f0JXvPqW6uQYKlouoZz78+szSdwPrghf4NksAqqJxcSl3B+PVkiPRaP
ByoYAavaqyDGZKYx+0+HBw7+NXj8KWuzV3arrcJz4RKlCZyfkK3T+om/L1uR
7bajCqtw+qqcPQXnouPyeWbvMeR4V4tXSWoVXru39/fiPENS6F0trqe2/p+y
y4Kr4OKgP/0b54Rd8eoDuP7THOel9bhXwcFY0SYT5/x9n2xfvcNQepZDxH+s
uM7hdkWx/+L0fhkx7I8hDqWLW2SmVwCENtRsca59XX5x1BtD8ukyX2NqV0DN
MZFpHs83WbhbXeqIofwS64chsAJHJF2qW3Du+yVp5dYTDKmJLbh55K7AClMy
SsO5UpmgWvEjDAnqWWxV+rQCqpqOwTo4H48sVk+ywFCP/9FJSecV+JNpevYu
nv+PXvgOiWvj36XiS0HVgRU4sKh5IW2ZjkzZsvNUuTC0V1xxZo1/BURdkwTl
cO7zVLNfYwuGUpuvFx3hWoFyH5urv/Bz/frajczVFSIabTL6bbC4DAORjzjz
8TpwOMFR1mGYiEISz9lub1iGB56OfXrzdHQs1VPY/RcR2be7fN30ZBnu3khJ
WJqkI2V2ykGD60SkIaSwz/ruMpRt9JK24LzHpot5XZOIctlLPEuNl0HE9EPk
NgYdNY1KhmsrEZGw3o8eXbVlCHBP+PN3jI5aRfPq2oSIiPxxKp3OswwpB5so
mnQ6imzIM2bLHUJTGvs8FbKXIDfrO8vmAbxOvt3uqBVAQOkfx/b7jC2CHJNN
qDFet7uUdp4wz+hHixEqR8iDi7BpUxMPqYiOOjv2bbrzpB8x1XwQPduyCFdK
p66b4X1hem/hnI98PxIP9bg5nrMIQ3/UYmR+0tHwsyN8J8r6kJjU6OIpj0VY
27ug8F8aHa+zVxrE63rR3S9HHfK5F4FVPvPjvWA6qh1cHXT52Y32Lk14n5Vf
AHly47Iy3tcyVlss68bbULjPn6byowsw70CI98D7oK3/B0MmvA9KndWp1RJe
AGG7yI0CvG+uVT6yfYH3TS+Jk+13Ny2Ar/VvIV4tvH9VPTpiFd+KFrbGhdfU
z4P6wf1BD5ToyOWiCPuyWgvSCzx/XuL2PDirQJqTAB3RxNtcSgfr0PW5tdaH
7+bgkQxtabGJhlaUoh4Pmv5CJOITL96Xc+BqzVUmWkdDsEeS69VQMbKoYvnw
22EOtC/4lJyqoqFytTdOXreLkInk4wSuG3NwtnIhXLSYhuQ51RTSzPPRb+XH
xESJOWBgk5qjyTRkZeSBqen8QNPNPU6hNbOQ1H9Q8cIzGpJlrX1x+3kYUn7X
mniseBa8jiZt5NvS0J/DdsFz1/yRc4Ph3srMWYB3see23KchVedp07smruhJ
yOa6mfezMCp3fNMhUxoSq5nlAw8nsMestA0sZ4E1Q8xf/wwNdciGbrJ99QE4
v/AnOm+ahRf08tzRBSrq4qt8PEPOgXvH3tqcnJuBpsttb2QYVLTnjgL54es8
EGxNKGUMzwDbu28+ihQqIvrvH885XgDbCn7zeLXMgEnT9gSPZioK/8oaHutS
DIcijqoKfZwBAkVqtCiRipavIZZnXGVQfhHuTJ2bgY8BT863KlERf0VY6bPf
NcCkXbyVK2oafMILn34/RkEuC4rn3OPaQOK8pmndu2nY05JxXZqPghw+JLgb
7WyHyvG56bxX09DBJhasy0RBjSoHlcV928FQbf+2Q3bTcP27nZJlOxkd0sTm
X9p2QDat66C79jSEc9wMYnMkI8epqAdbz3WBdPDezTOc09CkizXppZJQ9dQM
T/lAL5itlP2QZZ0GD1LWnb0BJJQluMyvr9sHY4l9GbkbU3D12DWhaDsS+n6g
OyW1rA/MZyp9nWam4Nsd48UUBRJy91O5EpzcD1Gr6eGshCnY/ZP1lkYVhrik
OmR3PRiE8rshHy73TgGnn97fklTcB2zVqHjaNwhRVmuDPR1TMKBe6jKJ90vx
rVm7vLQIcPmiyMechil4N3ebO/A/DDEWzhrEHx2CL5sMR9/CFFxnupHU1UpE
wdJ3dcqfEEEL2+8/XDIF5r0PA65mE9ELU+5M7zQi7PVQ7PArmgKmjV8QHor7
oe26zruGiPB331bewLwpuJs752h3lYiyuAQlQrQx+BH5qX02Zwr2udfwcsoQ
kULmRT/3lxhoNvE1xv+cgq/7lRTtdxJRHdcxBel8DD46N1fn/piCzye8As9/
GEILXjVBI/tIoNjOai2O8we56tTeG0NIQ38qb8yQBFtU8706sqYg7MR+DU7B
IXR08wuZrLckYBJQJ1bhnBv85Aa6CGhc4r+q06UkaFvpUVvE+RTvNnHtMAIy
MGI/5TpLgqcnsx48xPe/amxiaaJLQCNtoqqeR8igUXCfVzQb19Py4WkODgJi
3vbmh+oNMhya1V3nweMvCnj+y6x6EO2KydT5HUSG2fYEggb+vgHsyhyGLwdR
M+fZ7vlyMlB8qh8X5U7BvctcfNPKg0idfYNvZI4MWELG7cf5U7Dscer3qfkB
RFJKaQ07QoF8z17N4OIpYF6wm8u4P4DcSpcbtr+jQFd3W0xZNc71ZN8+1+lH
ovIl2k+uUiFcn414uG4KaCvnvuuz9CPjLUVtLK+oYL/ppmB94xQkaVpc7y7u
Q3eMEV3jJxUCy95L13TiOsiIxPcf7UM+5/w/t/LQgPllw+V3w1Pg5na/rGtT
L6L0zukMNtLgzNvLnoUTUxC33z3KpKAH+RJ1iseWadC0QdojgudtRlc2v79N
D4rlnov6dJgOhvoLt4PWpyAmeM5mtLcb7Q81eLDuSYcB9vAYdv5p6Llutivx
axfa563VbCg5DC0uM22HDHBurPnX8FwHKvZkS1azH4HL/AufCm5Ow8d77Ik6
0+3INvxEm2j0CNRPXHP1sJoGgpJfPSmxHY0eftMQADif0ZZMdp6GliLeuXHm
drRCfiu1g2MUMvcS9A0/TEOwQ9XGrd+t6Bp3drpX3CgorgvMrM9NA99xY5a9
F5qQit3A0wepY9D8Rcrqy6YZkKgoYjeIbkSkT6XLN6vHwDv+6yXf7TMgqRkd
lj/RgEKjvuWXUsbA+NGETdXBGZAZzIhdDqtHy1vMLtSJjkPxpT4JE6MZWFX+
MOnc9QclOs/2pgWOQ9q8b7ZO1QwIWvP8OCxbgebEy+2M/puA0fNTXRHtM+Ak
fviwgVs5khX6a85jMQFfRh4cYyHNwG7RrWsVFWXoTlp+Bc+zCRjbE6p/YWMG
Xjx7fvnZlVLUZ7ecMxA7Ac+0dlOUlWeBMJGn9qCiCC1ZCitfIUzAxqAC70ut
Wbjtom5F1SxEOYM+4YvjE1BwZM9FovEsHLLOIcg35iPjfWfPdixPQP2d3mt0
51lI4FA1iWnLQQee2Z3Yu5sBu49lZvzNnwUuB3bh1aRvaPMmzsBSFQYcj7t1
oqF6FrjXtT99as9A1ldY5LQuMOCQZIRRTucsfIxOebOXOQ1JHf+cwavNgAcL
Mg7JM7OwyPRVYceNRKSoxb7LxpABE66ttV+Y52C+xzT51Y4PiNRca7BkwoAs
R6O3hTvnYDUrMf313WjEeymZpcKMAZ6XFm43iuHrq5XSHxWFoeXJvIC62/hz
R+7PUk/866ceKwThAMQ8uuy0w5IB66Yv6ZvQHByOr+ZJqniBpp2KH4fcZcDv
jUyC6OU54H6R/jIu5S7a/o0kc8WKASy/Q9zO3pyD8D8Gz7XLrUGbUzpDG+fv
bLzv3Hg0B71V16pfa70Eow9GHa/wfSZjJOWcXefAQWBzQkFSALzXW21evMOA
C93booL95yC777J9y1oY6AaH9WbgcS5T1o5/jp6DnKIbdsS0aPh5T0Y7Bn8v
+24s4UfaHDzh6nzWcPUDMIfKxdXgOjQ5sYTn5+Prhbp+ZLgnQurWPvNTuG7n
juUU5lTPgf8Yq6OIXjK0sX29RLjCANQ9bhxEmQOTP7E1AnMZ0HuG0T57ngGh
lv+pJIrOw2sRnyzePT/hRIRY1Ll9DHjxSZtxRmoeCijEZ8ZuOVAmJv6ynI8B
pp/JXdUquP85pZ5SQcwFbvrF7LccDIjjs4dY43k4cCXfpi+lALJEeg6tTU/A
9kze1FOh80ApWQ/vPvQbOh2WSt8WToDYiz9Rgh/nwXds262d3gAjSoO/3NMn
4HoDvzXt2zyQ1PoDuexKwXuwlq86agKmjeLWj9TOw+zFkEPqdWWQc8Wl87bj
BHwVHQ9XW5+H1Xt/T68+qwS+fCpj/dAE/NYNkxG3WIAjrRkKt77XQsmvWOHU
x+Owb1sHmcC5CKe1a90Zda2gZPbEblfkKGipD4mO8y2CvEj2gt/eNrB0E839
az8Ki9gxYpXYInytVHcrsm2Ddn0T9SuXR4FNlC1l8NQi8P8UO8zgaQeh8qey
CZtHYUuoVcn764vw5oL0w/RrHaDSFvMg494IdJxgvKWHL4KW87mbStVdsKD0
LJ9TZBgEn4s5RccuAqHX3KuZpxvm2bzf0afpEF4uq7ErcREuMd++w3GrG+Bq
C5N5DR2cukk2NzPx9erbyM/nu2H2HZf7CVs6aIlX0c9XLkJh3xBZdV8viOUp
VdgW0YCvhrtwD3URLKknLoJVPwQhToMEVSpYjJxhOji8CA1zcGLyWz/YZYZp
z+2gwkPzfPu50UXwcNynWDvbD792bRtYJ1AgNH76M2FyEZpUJXe7vByA8sLV
NCk3ChD1Q+vnpxZhz/tPFN2aATDKa9S7rkWBkdngsZaZRZBANW2NnINAWIh7
LM9PAU1nM0bt/CJkHSDzQ8QglOzd3rz/JxkUrMPR8MIifHDrKTvZPwgcjwzc
Tr4gQ4bSfeuaxUUI2Lt89KIoATw+Xny0rEOGw38P7LNeWoS0Zd1zm+4Q4PaB
0raXAmS4c15Uogbns4wZ4s0UAuSfGCXXUEkwbMulRsc5MXCyznSEAPf2WHU0
/iCB1zn1Y//Wu9mIZywdG4J76HFvuDsJQu5u/mKFc590xCNnMwSjPTNHRC6R
4O5Y+ZsqPJ7R14WeO7KGwPzGn6UHu0mABt+EkfH4d0uRrntPDYFgfdYrtyEM
/LrORpXi7wtCHg6XBIiAFfts6GdgQPT1pOfh+vi8erBeZEyEXXcv5hkjDFK+
mQ4343rGul02SHpOhB7ePff92TCweOyll4rrn71tW861aCIwi5Wu+bQTgcv7
1JYQ/Hu5204rc/UQYZF7fwPJigjOjOBTSfRF+M4fLb57gQh8113faJwkQvPJ
9NCnFHzOakoOJ/BiUH2azXx2eggijpQuXMbnuJ6CDpGSqxjYlfkkfeUbAtq7
5R/T9YsQzn3utWMtBra9KmMcJoMw6y0vr1uzCK/ZZPiCKRis7KYEBkwNQPhs
nNrTcvxc6PMlPN7AQNwyW6v+9QBIFFjTeAoWQczMcfSRLAku7Az/8javH7gb
TbcXflyEqt49+0xjSZDQMLl4bUcfSKYftdt8bxGeTN0aHTMlg/0Jus9Cfhec
r3Nu9W9fAL8/r5/+/EiBZ80v/tMZbQYNvV/vlv4sQK2Dp+D+bNwn3Tbdem9n
MzzjEVbV/L0ArDvD8xUqKGDE6cMeqNAE6z8SjP3TFiA8Jl7djEKBXT6m6ux+
DXC8l8O8wnUBQmQpYaH7qSAXwpWifLAWGkLVdXlFFuDUx9Cyg0FUaDNQ+E/y
QTlE39rt/QGve417hW/ST9Jg1axwbMefzzCwx2b3w//mYeuzD0faFGh4/vYm
O0V/AiFT2/2nz83D3QKdrLeqNPjb+5WzqTcOnpW/VK0+Mg9NJqnGT3Rp4KAY
/WmfbDBo0kzuUhfmoGBhgP/UQxp8nHllKFj5Em17Ffn7QsQcWPk8nhqMpUHE
TH/Sn53fUOzGE+6i9ln48uLxjO8oDcJ7Ir2/sVUgjkOKj8LwOfGmn4QziUGD
RRZfmY3fFegU5nzsET4nNp5idZCeocGRkK/BD59WIoeRclmhpFnQ70uZ/rJC
g/IPTWqve6tQ2MF9hx7azwLLG1lRMU46iHzwWnGL+YN++M11ZnPPwjvBC5XX
jtEh8DabWM54I7rjvMv2tPYMJG4SnjtmSYd19/cLY4R2ZKi8/jPnzAxceqBh
W2VNh7fCfhyxUh2oLl7a7+TJGVDQ8zY2fEgHPb/lPwHuHSiGKVJGhHcGru72
2WVmTwe+xuP50gKdSFLyTXMHYRrGOFhrNr2gQ3nQKP3axS7UbS5n2f5kGlza
w/Vco+kg51oyme3eg6ToWVntkVPw9NFv3tOVeN0MMgZxrQHU8YYSouWP+9VH
MXEu1XT4czVvOthzAI2OpZtVu03BmfjX4T//0CHLrW1KKGcAZUWJ6jfdnoJD
8UsJGw10eD2wtumd4CAq2pS2KCE5BXqkZ5wbHXTobLYs6BwYRCqkUxr25X/h
qzhyiiHRYfr1i0IO+SFETltc+DE5CXe12QbLZulQdUV319YkIpJodd860zMJ
BNOgOpc5OviQC57t+05EliIdx3XLJ4F3Kk/j2DwdBHNlvpOLiGjV7/Yj4/f4
PkyB2U8X6MA2FOFngc9zXYNpVwtUJiFBlnl72hIdSvtoe24tE9HGyJ7FjkOT
MGOnLXhgmQ5hg7rnGjdjaJL9NOf2nZPg3tJ3KxLn1wTuPBnhxNC2s96kJioD
soW8nj1aocOFswzpEyIYClo99yw0mAHKti95mlfpoOlP9dx6BkOlbDHbvV0Z
YKEsICK4RocnmuoCa+cxlK09/CUQ903Zz0uOmuNcsGHMNFULQz+H/cfGcf94
W7FTlIDzWzeWhPZexxDp41P7ktEJ8HTYaZO6TofgvtCgpEcYGhpiCbnbNQG3
N9XcacH54dbbvteeYCgvl/Xh/nLcd8zqrs7h/P3Vd2r//if8kLmN0B49AfoH
4xrkN+jA4+GZV+eOoW+neL1WLk3Aa78nrjE4H30Y+bnEH0ON2NqbI3ITcGdI
TfwbztlLHbYavMPQGkS53t4/AY2fKlN+4Vxx+Ezx1yAM7U0q/jC9PA78xISU
HpyP36BlxYZhyCM+w0eTPg4fQpf1yTh/IJCfcuo9vr7i+q/k9nHc/9GUxnGu
kVJxLSACQ9faq3ezlY7Dq60yj2ZwHkjjXk6OxJAFp4fhk6/jEKOdNbeIcxUN
x7oXURiSjJHVGowah/LA46RVnH/OecwQjsbQm+FXudo++D7brRQ3cJ7wd8XL
BecR4rE3ip+MA0/BxsY/7mMQGB2N81zZWeZjZuNQf9tX/h/HtKbk/61/84jt
UbTWOEi5PSD82//CQy2jf/ubqHLc2CI/DrNmzH//xSNyf++IJx5PufL7qMcH
xiFKKNDyX/w5GSaNn/H4x1/cHmnZgevTfUb63/umv3Ya8MffN2fPMr/U6hhc
/6Sk+U8f0e3BJGlcnwQj67lXw2Nw6vePqH96XmcJ/RiN68meYMDMWzYGVOPj
4f/0z1+6szMD17/taEvx1ydjQDrZJGSDc8+vD/krvTGUtpvs9/3mGLhZ3VS6
hvMA9iZPq5cYsgvrUEq8NAa+dR/S/uXDT73rp6rxfKgu/eilv28MRB7taf2X
P5tckXAxnj/uFsUTDc2jUOY+8FjrH/9yPuOeBYa+X6p44lI4CqnbIj/vxDmT
u4Hj/RsYSq6fl9qeNAoWaunz7Xg+vzZqsOQ1xND5o28PDzmOQknCrX5NnK9V
d/x8oImheIs8/f2Co6BJN50Yw8/XyQNmZxlHMHTOwOVt5Y0RWA7zw7rxc30g
23nlUQ8RKXA5e/pdGAHBFzaOJ3DuXvYzO6mBiL5xlx+TkBwBDZnLee54fYjO
2sPuWEpESs4VxjtWhsFNJ0JpDa8zISe3NZNTiIjQAn7mkcMgbZkV/HKKDs+O
MAf32BDRoxDPGx51dCA/SrKxG6ZD3Fh9xmDHEIJ9xwvvZeHfb1LOgZ9OB9qC
c1fv9yEkIcVtqhRBB8sCe44cKp4PYjfpM2+GkDilwSriNh1KSt97VuF1T3Sz
mYGH8hAyWvx24+ICDYQWMU7dAToYt3iN9YQRkMThnWwXRGmgLefFN43X1QZt
moumwCAqb1oPfWJNgW0d4XPJn+ngbUkqHHLqRc+Ujhy5pkOB/F/1MX8+0UH1
Uri6r3wvaus6NSQnTYGSYWsLYgIdfs2/tTee70EiCycn1pfJMBk3PDIZhdf/
n/pi/k960JODPIupgWSYlmwdCw2gQ6qq4Opps24UvNGT8DuPBPNtGyZseN85
8pyZMLizE11E6lXAgQEfWeeyrxxezzUEDvP3NaPaQeyh9hQRgr8kJb+WocMM
L0/3Jolm1OXq6zvYRQR5LR0/Lyk63NCR605xbkKpka/UdicS4XTtc+0bh+gw
wEE3keZpRIlGZYRKBSKk0D8sfeKlQ6WXkN53uTpUE2uf09tIgM2yujskp2lQ
0abAF6xZiQYg0THGrx8yomlH6hJowKTgaqmWnonc3oht+2TYD97ErXclomnQ
ssuZZW/cF0S9t/Yz8WA/sGhKnLMJo4HgMPGhdEAa2tD9Lzmyog8GRmSKYv1w
X2Hl3aNomYiyE6k8uhu9UGg3V29tQ4OT8nHRXzr80Pfh01y+z3rAKvSOsKss
Db5cteI9Z5IEQYqN0u7qPVA72hr/QJIGPt8i41repcDlzW6S7rt7wDN5/8BB
cRpc/hu9x6giHRiuNz99yO6GvuK5zUs8NHjbbRfEKZgFqoZbP2ZOdsEHzMST
MkEFMyS2aP8+D2y31261s+2EDsJx+6eRVLhS+uSPSU8ZNPXaLp5U7YSq2kJ3
i7dUSA45f87jSzkc2DJ58tjOTigWYH21xZMKnYviLHSPCvi8NLPS/7MDEvP+
bLpzlwpak6aqzw9VQbHN8xupq+3Qdf/4KXMpKnjyCXbLOv8BkXTT0Z4PbfB1
jwhXZRYFPFJv/g3d3wzBitdY5HRaoDpSbFX7GRlku2lmm5W7gINXIXT9aAtg
sbc9Oc3IcGCf4/eFb10gmybZnrqtBeY8b999qk4G/SBqW7VYN5gTabIGIc0w
Z3n8peIuMmT3sSWMbumBHtHbcmGpTUDPtN7WmEGCaZ53/SuNvaBl9WWK9KQJ
pD+uGtKCSEBqsDNwQX1QYm+Ys/9sE/BcGhH64UACvudMxF9ZfaB21MvCa6AR
ot0TMfMzJHgpFfvoTWg/zNtXtIpIN0JNmfGhq/UYPLduI9GvDkJlku7IfxyN
UP9UGBPNxCBZ8/2VC+WDkLBLbJ83vQH8CYvvM4IxaFnX+3xFmgBeAt8sOFIa
QMv9jvnqNQxevvZOsuEagrr9YeRY5QZYVLVhyuvD5xGd1n0qFkTI+KyLCR9q
gJ4bX5WDi4lA0Ddi9Y0iwtemp0LpPA3grbDqJx2HzzsfyjLjm4jQ5PeVCZuq
h9ZLyVmNN4jwNOnOVWklDHb/Iex6S6kHG27JT3UqRDAiTnRk2GKgsb1c8Uxv
PUiYJteFChNhvXvo6MRnDBSMn/3J+VMPU3qKU9z5QzBJLrpXw0UCKVUDM6eK
erjcfNTe1nEInpCCKDfOk2D2rKeVSmk9uPO+uvbw1BAELzka5jmRILtE7xgz
1MP14jNCrFMEiKti9m/7QgIHZ8PBapyTv9yUOZdJgMqTqdpZQyTQWPvx/nV5
PfjyTTH2PiSAblLwvcv4dzbif26kXlMPgZZCQfGHCZC24Zf5RYMM3GXjfCuN
9RBhekypjDwIE5ZNY9XPybDKHPcjtaseDn0sZvL/MAgZPxcYCV/JoPP+4bIm
hsffNzCwiM9psc3lvjJDZJCieuUNTNQDa4NmNhffICRFT758sZMC1Rcu3mvj
bADWl5/uy7wdACdbqwENRwosyriL595ugO1NlgoPn/TD2pfxKFNFKnBfmWxM
c20Aw9+xGQck+kFRzbb8430qVNaPbXeLbAC57TbSfqQ+0LlUnRkRTQXV9d3Z
+R0NYD/vx3Hlah84p1hRgxapYFLx3lv1biNwdB5qHz7eC1fMm3vDs2kg494V
4D/QBApyfxbWO7ogFNtiV807DDyHnqWl7miGbR/23XJ41wWLHFoWaWeGoToo
yFTjQjM0bxa4GaveBYWFsX0yd4fh8sUHRpuym6Hid1TKSk4n0Ic7nFR+DoOg
1Z2CeN0W0JRvpU0HdUD5OzphXWsEAu4IuIfdagWXQJsPQnJt4GtWuW3HvVG4
o5aiUObdCl0G1J7rI60w/VzRs/fNKJy1aPn2MaMVGp7G31GKa4XAs5fGT38Z
BbOzSeZ2i61w6/Hon0mmVnhYvHk1fnwUkmVid8jEtQH798JjfAHNwN3ceW35
/hgkfpvX5NrcAXbnD9hputeBQUVa4fn/xsHW8uneYpkO4IxccBfoqQWeV2c2
9K3Hwffv5+3MdzpgnD3l/nGZWhjPKOrufjEOgoNd1QZVHRCVlpckRqmB2+UC
hdLZ47DukxDXHtwJZTJdR6+hKjAoFsmf2j4BMsHOnBWq3VCxmCT6MB3gwCc9
1eLUCaDpaSb0OndD+ZvYqK2XfoPa9CH/TQUT0BRz5brpj27wJt3TdaaXQNNb
DunomgkYH4qTCT7QA/OTrPRVsSKg8YnX5VAm4MhykZomZy8+jzx48dsvBxLW
B9Lv8zGgID4i89zFXjg1dCpeXPQn/FJU5du6jwGZZ2KYX3n1gtm722WFuT/g
SFzaIF2CAceuBybWLvWCBstDkm7ZN1A+skB/jM8JdStsRt2jeD3r0mUzMEuE
s9h5kQeGDKB2NhSGS/aD0NHJbomABBj+vC5tbMoAxc4KdkebfmD0G+3dbhIF
I50BH81vMeCmQpPGk6x+8Gt4+SXpUCgUdFMyPS0YcPfb1Rte0/1gMdfs6E3x
AyfRJ/W5lgzwNo858Ul2ABI+fyXOzj6DKNasQGZ8nvmqcCah+tkANN1uV0jY
chY9WEouvotzsnu011jBAHxDzOOBuS4IZsRUh+4y4MZmvfxtKwOQl6U4llH5
BqV9aZC1xfffQagS3HNmEJibFtoi+MKQltKeQV48nrwfwaE7PAfhAvsf9/ZL
0ajpFS2l3YwB1+O3BCYyE0CO53jGYmciCni0djjSgAGl+3VET1wgwOuz25T2
TCSjsczz/gm6DJB/4UN740MAynaz+B2b05E7TcWiVJMBfz0+7Q3aOgSPfZSY
pyW+I+KP/U5GCgzIHZIykNQcgiKatJKmyA9kcdwgpFWKASl7Fa+7vx6CrOEU
ikJKNhpfae55IM6AHKTRxc1CBEEiq7jiz1wk3N0puGU7A0QqRJStXhJBoyWe
MQPF6DTReYy7YwLO/5f1yN0OgyqV6K/6DRXIzHxKNFx5Aoz81cOF32EwasT6
2ta3ElWoy/ILHJyAOMPYuUfpGJxez5ouQlVoSCklnoLncw5HiJwghsH76gtn
Or9XI7f08ccmg+Pwl5e/zVmHBNvDOcUHfGrR5rs3OrkcxsFibPAnDw8ZZG70
R+pva0bhyuSBJa8xYB692t2rh/f1HWc5gnM7EPtD5fY1+REg308gb9ymQB5W
Wt62uROZY4rvmLhHoElRMqr4CQUMP37NLNDrRPuvnHWLog8Doze6eSqIAn8y
ZV8+Ge9Eff1HdQLfD4PBi1QjrRoKmJl3Sn/b242mrfQ1S8bpYCfQ8Fh6HxXq
jyoHDtn2oqCwlmjzNzSIMpR2t5OgglTfjp60gl7kKB7Ob2VKg27ta8Yqp6gg
FhTpILKpD91Z+Ci15zgNNAuTDjifp8JVdlvBHSF9yOspM+/LZiowuU2E2ZpR
Ia1lxHPLt370QX4T7T03FS74X/vMYkmFUU6X09Iz/ehbgOhVQSIFuK0OtezD
67rG9knDbYoDyN7JftO17xQoujl+cPoJFSbtu5jyKwaQsvmPoTHcf2uw9h35
7EgF1rOL1u+2DaKZg9bWOkIUSBPuXup3psLl+IIFzv8GUam8NsVqhAyfSdyN
fe5U8Op5Yc3SOYiO1ubdb/Imw6hKVuFH3J890R12c+EnoKpN8zV7r5LBTYpN
a/QFFURD0MEIUwLSVD1cc0yUDPYCp1fzXlJhfOnZBcMEAqpJeBu6NEaCPwll
V1m9cJ93Uz+tkEhAMfQWg9cFJHhxXLGzG18/rWq4DfYPoXVB2TO93iRwKfjB
fQznne+ztty1xOeWtk+OE1dIUGt/O2oDj4e9SfVYRvIQkvTukKwWJkHqfUVW
Aw8q9OyKnwigDSGVH3YhlsMYPKjzWZFwo8LPi+87fXYRkdqiSHvtTwzuRYXt
e/mcCr56+wxDTxHRUaHP+xc8MPhaI9361Z4KPmwVfDueEtG09bWczN0YsBsx
f1nBv1f6AXqx6yQRbT+n9PjnGSIomSf3NxhR4a6DTfw2Lgx1pVkSXbbi84aZ
3IrwVSrMG/lrmkhiKGNA/eSRxCEwOeZrqoTng/kFisDFexiad9GNfVlDABPx
M09tRalw3N+6ev8ghiI/843pcA0Cy+wexvFSCnw6SRLMKiShbMdlAa/AXqDk
jxzn+UkBc+avahJtJJR0JP/xzoO9EC99KTAwmQKcNV8mb46SUE//1qmnxT2Q
2Ga389obCggsPDCaECCjKn2ro8X0bgj/tbdGFs+XQ8ulS+8cyYjd2Yw/6GwX
sNlcEYgvJcPAwTb1tb0UdN+Cp1eW3gZDO7bbpDwhgdjPo/E+J6hIcbidccb6
DyixqgkNmuA+qy32c90ZKuJ+k17zOqQG+K1zN43ifq1LyfjAL20q0qh7EsRc
Ug3fpWQDgnhJuH9f6vxmRUXfpP9rCd1ZBeP68nwX8zEI142/2BtFRSZv5LPC
oAwIOW8OHpsngrS/y2brSSoStZ/j7byWB2I3vLDxHgLwS266NWZLQ8Rv1w1Y
8v2Rvyt/y9MkAsR+XHVceEZDUc1G0uOHw9HTPz1l648JEK8b8rvHnYb+YnI8
DxkxqK3uMc+BzQTo+Sl/fv9bGkpp27oUIvsZFQQ+e5J5fBB4D15e2/SZhrw3
tcy4VmYhiv+l0KJX/bBvfVnvcgsN6cD2C4erfiGNpm01ISd6wJu2MrYsSEf3
0vcaVonWI3uN9Yd8y90glaoSoiJKR7tf+u7p6a1HLZIRe4Iru8HYU+uVwwE6
chhKTvgW2oBmznkpmRvj85f8iWt/jtHRA9dwrxCmJtS4pYTdyqsLhE8679+i
QkcNnziC71m1oCN5EnNlrbhvqahOHDGho9RJC+npne3oyUUL9otWrWD4sE17
XygdGU0dVK3r7UYGQ/mZZJlWSNWR9dn+no64nx6soAj2oMHLTSxuGy2wj1nF
928kHfG7s75XN+1B7TLnjydFtYCLyd5bMfF0tLyPvt7Z24OM1sW06t43wxKz
7PrzNDoyPl8VzNfUi35JumefNW+A+VqWCN0SOgppLV++HtqPrjZ91ezgqIbD
8jvsKvrp6KjSGe4VHwL6LS/ddCmtCrZf1Ok0GcR1IPOdCswkoGmOwfrN+Ggf
qnNonUbA93/fnmDcRUCXzHLzdT0r4VMe/c8gRkeWAlndMQeG0OGG50uBC+Xw
x+P4kgYd1yco/1tHzhDqyDi47jgFYLLjtKzwXzrSexN83cKYiChme+gypwHC
7ri6sE3R0Wx5pli4NRFxMa9FwPPfIEdNPTKB89D8JvN7jkRU7K7Sqb/lFzjm
ku5FzeDPHVirWw4iIiIyO59xqAhq4utfv5qno+cf+GX6SomI3fD38xNhOWCX
u1utd5mOSpqamI/xYOgM0eucwPBP8BsOFFJboaMbQ7Ofvwti6Bjj3NWuMz/h
uz/CPuO8wPiCIG0/hqZ3F82Vjf2AXUVXdhiv0tHre+WFD2UwJHd0p/v+xExY
9Xfa7LVGR0onvpr+/Q9D4WcEHoYZfQPzc02XSnF+wdBGRPAahnJUFXScuL+C
TukRmWWcH29Z2L1qjKG/vfOddt7pQBC3Lri9jucJp9TnMUsMuZi+YZ11/Qzq
fndYt2zQ0QTrb/93ThjSc5fyq1NJgsG8140Hce5C+XP2nSuGFlHcQM76J+jm
df15HueKiY25Wp4Y2vXak7KL4wPUy713ccL5GTshtMkXQyWPzDO/hMeBjxMt
+R3Op6e3Wa+8xtBtvmutk6IxIMkk5v0J5z5777rlvsUQT7WnyYLSe+i4qt5R
jvNlg50qD4Mx1Oh4ttOxLhRO7rZxb/l3b5nLONc6FEPYNt85PtNgiOdqujiA
86q9poUHwzFktcAm8rj3LcRHW2nScM79qD0i+T2GDts7t9xa94XF4achDJz7
bhYJpUfgdT2pN65Y3As8ws1k5nB+irhBGYvE41FaSX0Q5QLf9L7LL+O8TMj5
d3YUhoQXZf9jHrEDqUmWL//uA3dkR6upRGMo780Jt4jRG+D2gTPs3/3hG/w2
/q9xHu/xUUA85jyqiHOb+ccFgZgUifOrDM25DLV7SPz4zsZ/95Ndcn+G3Md5
wKU3oYdaHNFljoC9/+4z+91x117Hn/uu9VjGlReeSEU2b+jf/eeBx99/GeC8
MTxk8nS0N0rYY8kxjXPjnJRaWzz+7w9Oxvk9fYPcDrq9/3e/+oFhpboO/r4x
DvsrgiNC0NwePv8unKe8Jf7QDsNQYJTCZQ/WcPReSrClFud2O3YJ2IRgaMfo
ubCPThHIqTr9WDHOE06rDekFYYh4INd0h1ks6guML4nEeekZ4603/DFkHWSe
lvAhEZmPjY7I4lxg6Zy0jTuGDgk5SZ0lJKHun1gY7788uXjhQtBzDBm3BBQv
7k1G7r/8L87g+ZkSo1n/2BFDhkmVj+c+piLhx0N7k3E+pX88w/wRhlxvHFO/
l/cVnVPff38Qz/Pa0J0B7NcxRH1j2zMZ9hM525xJePrv3v49uRs1Ihh6rV1d
sf+/HNQdgQ2x4Ny2A9uZxYuhlGOW/rpbc1H06HJ7IH5+TzG1y6lwYsiSs8Q/
3iMPcV+7VPR2iY6OKGJ5SotEJKf0pGrf80I0Iy0zu2+Bjg6c6HXKqSeiIBFk
zB8PqOl3bYwfXn9Gn449/nOLiCyvXoboC9XIslTDr6uPjvq4Tv54Y0NAJe+O
nKVlVqON9kI2nl46+ru2t2y7GgH9dTos7SxQg44O/ihV7aYjectTot93ExCn
IfHWrckaxHmH9ZdTOx0ZFgxxXcofRCfmDJiG4muRjfq5HTr1eB0YuRDZMzWA
zieKcjUxN6KdOxa+RxTg56Vw1/lwlX4ke1C0fXysFakvzwWa+uM63Fg4syTZ
jbSuppR3i7ShXTWFHAZ+dCSj/c6pcaQLyZxeFSjWa0P3XmSwaHjTkULu7r7J
5C7krSb27l5+GzJ1Pkfl8qAjVnvf2gPCXehSxXEvXa92ZDsWFI6e0NGViK3G
D5g6EavmsMM8byeKLXbNkjGko5z9HiWh6W1ItueLB4tsD2KfzWv+gPdTnYNn
fipz1yO5+L05b+72oPtu8+af+eiIk882KcGiDk22N7xnjexB/feyeD7y0JH6
yivKws9a1HiYHDyy1IN4RD0+u7LT0R+Zq43R+n9QW4Y52RJ60dxVAdfCJRo6
ldRYM+1bhZo+vX35+1I/snnG4k/ppCHt3cv2Di8Bnelvvk+/RUAzH+vkEj1p
6Nou+vmCvDik5mP2JuI9Af1cu3im0pmGn2slotboe8ScK0i+VE9Afu/ehhU/
oaEXWXpHC08EosaWNt4iuSG0P7vVc/8dGlJVPO13kt8QJT54adHCSkS8Kvx3
o8/jfuPmasjT/2LA67+CvfMDRCT+tLDScImK6prvK7xPzoHq2PsuQQtERCLo
2/QwqOjVuuel7Ed5oDIclCGA95mut6ryXBQqSsiINK+ULYBwtc6ERQ0M9cex
Cwc2UtFzzvCUxJpiCHumwPT5O4be94R/TI+joj6d1cMfXcsglC+j+oULCanW
Ft4YOEpF092bdEuL/kBtjQ8TRxgJ2Ry/ptIiQEXsPw435iXVgul0DXbjCwm1
ba+/YM5GRVJpify9AXWgfzHsuXY/CZld/yt1lU7B+9b19be3GuDeKefedXky
kjw1afMkgYLielO/sW9uAQfHT7SDJDJSePObOX6JjP5KYFud09vB7W86T/Uc
GYUf03JWJZMR00nXzdtFOoBEvyzGxEZB9gMmd70ayOiiHnFHQGgHrH8ud1aQ
oqDETrY4ajwZbd98n/+MaycUbZ0wd39KQf6jrmuaKmQkxLDfJqzdDWtGLhUV
eHy7FC+mpN8joQulmc+NSH2gIazbjM1QUNejewe0/yOhU8PN/Uev9kMGf87s
qw0K8t1itidJmoQkMNrO4rJ+MJu75q7HS0WRlR843JYwdL/yThrPxwG4KnI/
lUkZ10VHSnDJB69rIb+ol40JMHu7glnqPBXFiSapO+JzwSyXsEp3NQEsJ6i3
+7WoKOO5Qke2FoamPJu5OWSHwMFw4nmuEe6b43r3O+Fzx7fOscRcViKwDyn6
3rWhIolos7/qYUQUEpLqRRkkQs+Z4yvB9lS0el+khYHPNRkPuU7I7sJAjMTq
rfKMiq78sFS1uEZEr7y3dOhqYhAs8bt8txsVDXj9+PF1NxGdvuqqSvuBgU7t
SzY1Dypy+V61g2NkCA1/SU01o2HQphrl/deTipTuaEobpw2hOfMYjQRBEpTc
SAoRe0lFtt9ZrNWth1DQVd6/SZdJcPxO6Ps2nGdG7FNqPTiEAgoGnGy8SCBU
vHkVnxORC1vJ3nUyAQ24xmev5uLzo/hXud/4+hw0YNP4iYCMvFsd/xshwbfc
ipLFF1Qku8vJQRU/l2lznyJvCZOBt9SZPR+Pp9zP5ZaRMAGxXK9hSOuSoaj6
3scldyriLKBo8fUOIsNP1lcrXpJB6r3o5jJXXLeHFGXX94NI+MR0NE8OGRQu
EvSIjlTE8fJa95ntg0h6B8cp2h4KqJo4GCrieuaN54jF/xlANx57n7p3iQLl
yXuMBHD9/Z9uyUx5NYD8x60ck1woEPV3NtrOkoqqzdvGixb7kXarF9+5AQq0
WU5dCsDnIq/6MuZZQh+ycz/EthhLBUEhrV/Lm6koym1kW31sD7pmpipwiZMO
vzVOzmxboqCM76mWE3o9qK6r6nWLAh0eHHhtmjpBQdmWdluKt/YgJcvOP2uW
dDi67ddyRCcFlaauHDa070aDbvyPL5TQoed6V9mVjxQUwfmw3vV8F+JQPbfp
htUwVCZuE0vdR0H6Kq9jyR3tKHH7hMvj1BHwOFp6//hOCtJec96o9m9H5ifC
3++pHwHPMrNlYyYKGg8Ue2Ko2o5YhYSvmDFG4FBxXGPqIBl15zElPMtoQ9ON
aT3Fp0bhRnpsx4FwMnr3utQ1zaUVpe3mWQooHIWUq/VyfFMkdChSdTZgdxPi
7caeC2WNgcSlv+MIrxvzA1umlB0bUfCvJ09bG8ZAKoUhKVBFQoEXR92kOxuQ
yL0CLbaRMRA0LHMajCQhu87tfJOh9ahHdqZ1XnQcmIO3BlUpktDdoUOFOVtq
kbfqmfAQv3Fwi18UWbHF0GmiGc/W2grUSH6hsqg8AWeZU3jCDDAUKnlRzFik
AsnwklN7dCdA5nryk3ElDP2Z0OlmflqOxh9ozQrcmYCJlxk1IywYUn10M+i+
YBm6h+4R8/wmwJc5N+JsBBFp3f1m11ZRgpS110/sq52A535TyjtdiKgsakt4
vmUxSnrQUdzcPQER8d8Cf94kIrYtgZJvWYpQhJP1f83UCdi6W97bVpyISsUv
2Rw+l48Wy5otijYm4F5cSOZm8yFUEtN+1eH7D3RWQpeV5xgDnLJyz+3Fz9Uv
E1drtktZKKCkiV9QlgFZZ7ccWx4hoFmFyNXeim+orm5LiZUKzpW5CTufEpDS
TcvdWQfSULXrF5ZaLQaobGmvNZQnoLjaE8JLeslIgJofNHCFATEjD3Wergyi
jV0B6vqeiWiPl7/zSUMGqDud5tV8NYiclQttHn6PRvq33l6JMGPA7etVK+wX
B1FmtC7z0pZwdDSifSXlNgN0TvfmFrEPoq49mpLq+QFIlk3ZY+4OAzpCT3+5
0TSAAk40JVy5/RK9Gq53f3mXAQ3cpy/NhwygwXT5PAOJe+jzPPtvLSsG+OyI
ZHpnMIBkh2gOX6TvgsblE2J6OA94fun8IYEBZHX45DuppBcw0HE2Kfzf/72E
k141A/0ovXKER3bpLTD27bDktWQA/7ZpiWcf+1GG3I2jaylhIN8rEd+Ox/k4
ckN2/61+FNpG8SLURcPtndNhPv/+70VIZWxvP3J7LOVrPfEB4va4VOibMKDK
Qc56MrYPSSSrukfxpQDFsZpxUZcBNjz3/8qb9iG+48u3R8XTQTmF3G+ryQC5
d+PKBYJ96FBUb+qM9FcoeGlNyldlQL6lG/Y8Bvcnr+aMGg78gLRfqZnfpBjA
/PlYd41JL0oY1wudT80GyrC4l5k4A7iTesqshHpRZhonOn0sB3hkPPxOCzDA
4f491e/xuI/y6Z3NlMoHM+mNsJtMDFB+/2g/W2o3SuhGAVOHf4G+wkWT5soJ
IJ/Mn3B/0I34xNVX+JN+w1qyq8/ozwlg+Hep20p1437ruZo9VynQOFcOnUmc
gHqT3Mt9+V2osTguR8S3DMiGOu2hbhPQ3FF0ULu1E+1GP7RdH1XClAuLheaR
CWjTdtTu3deBAuQfj9ry1EG05TRZxmwcBtr03v5ltKM9e9wt7lbUgUxC3FMm
tXF4PPjFr6SkHY3rE26+eFoPhbyvf584OA4Um9Z+V5N2JFnLK3+otQFOTtmW
/8LrwDzrgHhbQhuK0A4gKng1A8cn3dODD8fgxGT9opVOK/IZ3zO7z6wNYjW4
G08bjoLwEuP+ozdNaF71wOLz/7pBuSvkpGMrHZS6i8b0TJqQsfYDrWvh3fDI
g4kQk0YHe6HXomWSTSgc2z6G9XXDe6dEoceedEjUzmG50NWIGrebUPmteyBL
PLlFSJIOMgvxWtwqjWj0O4sYk1svOF9IZy97SQOry3oNTgKNaFXQwseztBc+
OHupPTCkwZVo4X3Oiw0oPYitJIelD+aamUv/SNAgJYbMoV3cgLoEBFZUA/pA
rtkmM72NCs/aj5XaXWtAMfyVhsTIfkja1t+5R5QKWWo+8Z1nG9CAJvtprr5+
uH/Pps5vigJp0VYrJIkGpFC9XXZKaACypC4L5FZQwJd1lGVjawP62KS7rzNh
AFIuG+ZpW1OgclwhcOdSPSotvCjVOTQAP3RqlvMUKDAQ8VivY6weJetPRb0W
GwTOU3d8yWwUMIvP3mLfVY8+N8Rxb/00CBtxjibeX8gwG/M26UpTPZK0PVPQ
QhyEguPCEcuuZJBru9JGq6lHO6qeTmuJEYDyPHDjtA4ZROzVdOUq6lHCvQbM
4RYBtoU8C5bH+7swH3u9amk9Iiu4Rf6XQACumCI1pnESfFWQH94K9ahOQHNX
xwABTnZHcocUk4BJOUPxHc6jAp6e3yo0BBVHS2ZH/UmQcoGh2lZWj24l5LHQ
jIaAym82ymVCgurLXo96qurRlWzl/bYRQ9BwU39i7QgJlCp38n2qr0f6OckG
n9qHgHfp4HLBAgZqp+NfHG+vR8VJQUlnthHhefthrnPVGJQmDB6OoNejKl/+
68EXiGAtdE29xAKDRza91g6z9Wi5fSzQwYIIt2+lWP84iUFil/ZDwc0NaAe2
7ePRF0RgqgsPclongkjc7P3Sgw0Iuyw3zlxMhHw14WWXaCK8FvaxKFNsQNJv
ZS0O9hChU/X5hSIrIoif7N0doNuALgjDYd45Ijy7yPm56RQR4irDhj1eNCDJ
m+4VRlIYBJpIes7FDIHGJumtbQsNyGrKKUM/AYMDhNLJ5bVBkAnxiBUQbEQl
6/+dqyzE4PrqGJUlYhA6rra4HTrbiBzGaBVLHRj0aJwprj0+CJXrBNKbt42o
k8g1l8lOAttr0e8CbgwAs9Vp/zPKTYg9mXBy31MSUFIOiJ7K74PluXua6WPN
yCrxIKuQPBkyK2IeTVh0g9E2uVLSrhZko2yr2/sfGd6eyzxZs9QFE/kz6d9l
WlC80dKm/yzJwBZ8/9SL4C44dHLG18W+BZ19cLfqSjAZ9qkmW0X96oTxgqk7
7sstaMjDpSaLQoZDGRey4/g6YK2U8Frg6P9dnWk8lG/Uxy1tkkKSrSxJlhYi
KXGUrSSKIkIS2SL/LKkoCS0iVEiyV2RJ9q0u+74kS3YzhrntjGFm7M/t+Tyv
nrffF+c+12/Ode5z5nPmzF8YlAhPOP5kGGUV5z9qqvqDXjvxqp4jtcPha7Ul
kfdHELv3MZ5PepXohsfbziquDni972350acjiNdP++MRrwq0ZfkiR4BaB+yP
H33pGTiCdj4YHGP6Xo6+K37QS4vpgHNbd/XJJI6gNO28cs8tZUjL/lvvQfNO
uKz3wEihZQRd1gvZfSigGJ2hHjg5NPgPZHvPyW8VJCPOIsuXqkrpSO1DVqvN
ZA98Xl6SCn9DRgEXj+dfXEgCvyDtPVqivXCL/klyPIyMVJ0TC85rJQNBl6VA
xKgXrpiF+wl+JKPq3wnCgu9TQWtudrwS9UJndG2q0BcyIpVUvWDa/RPSxCUv
NYX1QfHwmHB5MRkJt16jvAnJBxVZ9WVQGoChFIGWvGEyCvtQ9iuXvxxG1/WS
GssJcEc7kd1ZBkOkbobHDkoTRNYHDFr0E6D8ggPN5xiGvkrtlXBJaobzsb8f
0/H+VKPyn0KgPF6/Dr+mBRm1gG9BRuyZI0QgNPw9FaCMIbXL/ZFuN/7AXIVh
tUAkEVh0hCf5LmLo8Ummzt7sVijamW0vf28I6CpGaTl2GBp9JCBzUb0d9iW3
BA/h9Wrvjcvdip8xtGnpcoVYaxeUeX0Zv6Y8DMoWDm70WAx5fc80rt7ZDTcI
xjl1V/F69YBLSEYChsYP1GhnXuwGyaKW1MwXw8Cpw92x/g1DMVOvUw0ruuGT
jf1uZ7yuDttd+UgmC0OW+jb2ZSk9cPik7EGZghEouaTkH1qJIb1Dm1hjDPqg
Nf2Yg03rCGjlvdubUY2hnXO5O/X9+kApc5k7YnwExNhbEKrFEI/ViPOZ3D4o
F0xd6hciQ3G5rnh5I4Zuyb3b18DTD3qRW1oxHzJE/CswPdeOoVBXWdfs+n6w
dG1mva6FgUPVTcVjRAwZmY+OZXMNwkMWKkuRBQbs31jtPg1hKOqTdaT4yUFw
y3nEzPYAg7sDgTUrJAzV8z2Sa7sxCJLb/oY6fsPAQI3XJJaMc+1C68mEQejW
tvh7fOsouBfIHL8zgSHpnwntnHj/V0EyO2FcPgptN7fe46FiKK5MujL9BQHS
qV0uF7pHwdN4aAsB50q9P3393xOAk7XvoOjsKPB3fG9ImMfQtvzsOtZ4Ajzg
fcnis28MrrP7R+ykYein8/Z0WgEBrHm3fKV5jEHrkkqCHwNDTcLSjLphAqhK
5s2Xio+Dk52JFP8KhlTN/li1HyYCX+hUUJ3yOMzpPW3y2ODNVus7TxDBxY5U
km0wDtdjA9iacR52Ql1l5gwRDnpHsR7zGQeN4If2DqsY+isy2JJ0kQiVm+Oa
27rHAfo7vK3WMHQ+ypib2YYIc9j8meWZcZD5yxnxHue9e3uf+DsQgXza4uj2
LRNQHejpVI5zTteDb/Px/uGMcnDOkNwEVB7/rcm9jiGzQm4ZyYdEGKae3hbz
cgIiZE9VvcR5Rq2UqsFLInA4xPSJxExAYrQ6LWZjjvfSLGYaSAR1eaeS99kT
IL/oHpCF84/dgVf2BhMB82c9dW1gAjL4tEz+4pxL1CAsPYwINjvcC5KoE8Dl
KtA/gPOLdoPmL98TQT+oc8vEtkmoLtU6N4bzx437WvnCiWBQm/JVav8kOD+N
jaXg/Ep64tmbEURIFQ8VtpKfBNsrI1s35ocdhEoXbuD30O3DpdUP5yfxPi37
1ca88aMARfFdH4mw7WV+c7X5JEgM3zu2MZ/84wLbvCfOXfbkiNPuT0I/v+b/
zjO/DzH02phnjs8/FHrw5SQY3OJbXsO5dObxShecP67Fvhh9noR10iuRDfv3
j6Lyje+xYXca9XXWJDwNo9nRcU722nNTHed1pcxslTWTMBHwpG4W577XnV1U
cf85htX+Y+2fhNMeu+RHca78Tev3zAciiGP+2Tpzk8An4hrWj3OP0HAmY1wf
H87MK5+2TsHDr7f+/MG5jfdegiuu57r1gVcWx6dAR37WIxPn7h8sWxqD8M/X
4anb+5dTQNP74X8Z59QF5tpJHyJoqFzX1YuZAjk2Gw45nO9mny2c88L9VK2+
LZQzBfEtogo7cR70wzg6xRPPa06OM4uDU0C5cd73Fx4/PwZmFyXw+Imqma36
pzQNgnNHQ8fw+NSwORysfR3XraZE5Yr+NJgV2YUn49yP1aeu5AoRXllUlpBt
psHm0+nzVjhP3+WU0auD67Brc5jdu2mgk2ciK/H4Py7+wJwbj3/OTX3m/2am
YUZuD6/KMh7/LiIcWgJEyFZRPZuaMQN5m70MfuP30fFO2YXeSgLkwet/D6pm
YMrEVGA3ztuXjgppFBLAdKnzvGXfDLS8n3e8uYAhK+n9dw3TCSC89zzj7OZZ
uPncktiP54Ezsq/fWuF5wF6Y+fZWhVmwItd1353FUOYNpRvHLAjw6vf23dPv
ZuEAn83XDAxDOaLn1BfQIHCFBt9UvUGBeC9DmU3NGGomyw2vHe8H/r2v0ii2
FEhJun+bDc+T2/okF5+z9sPQ87Zz390oMH705GXWegztKJ8ag7Y+kNR4TpEK
puB1i929jioMWb/mUjN36QNm67HtpmUUQGqbleZLMLSXGh2nGN8LS2OYqqLk
HGREkTwPp2BI5qZbSGt/NzA13d+xtDAHVnMKthqPMBSeubYgXtsBL0xjHF+w
UPF8I/FQ8AFe94v8tjnk2wG2qxGq3LuoYOz7vG7cFY+fgbiuZ8od4B6X2i0s
SQVDPuPA+04YqhM3+KWe1g6EkPk4PlMqELfLc0tZYui53/OjwgFtwMBK7nr8
osI3RRsxNQ0MVZoJx1sItULNyNe2Xb7zsORLPzS2BUOK4fnjDYU1kKe4YKAd
PA+77jgX1LPg5+rdzLufrQaY2T889I6aBxni+kz8Gt4/XKqfe2RcDb2zFibk
rHlQTuD6eIxGRqe78mcsKZUQtZBYkUGah/WlxIFC/L1f0ufrLS9QDo/nisLP
aC4Ah5xG3cpvMtKkfqOo+xeAzKVhYGajQbQ87/PqW2TE9Nerw1ZCFPx9zHv1
eGmQlGYvfcaUjGQrzPT1qx6hLQMX3KMP0ABTFCc8NSAjvs1GH6N5AlHz50xp
RVUaqLz/7mR/jowsXbaaNF78hGRTwlONXGngfb44LVCYjHbcKyfF+6WiPWUX
+Yv7aCBY7LBJtWkErbF6hW5tL0Z1WnvSy8docF4TM4gtG0HbWg/uNY36hfJH
g9N+02iQQ3P0z8gdQc9W5vd73kLo46XHxm856XA2xTi6JXoEGeXoVDE8y9B9
Po8FF3U60F5zps/cGUEtgl5hdhxVaL+izbatX+hwP2re7eXYMNqRVryj/2wj
+mfn9bkwkw6cvwJ3i3UNI63bv98LSzWhnpg7zToldCg9ydVgXD2MjG2Lpzw5
m9EjsbuirG100FL8kBkeP4y6Xy9z3hhsQQGT37clrtFBI/5JopXhMDq8S/1c
0u9WtHg28LPzJQbo+oRLBCaRkDh9LeelaQdqktxDtjZiAONmD9+mIBIi6guZ
xTZ1IP0DycwHbzLgW1v3OVF3Ekp2KlALV+tE95rW69fuMSD47HfWSxokdEns
ciu/xD90v1NsbT2YAWYZpw4HDwwhvSrNBJmZLrQifnrpUxkD7Dht+WdYh9AT
iQYPwQd9iF3fNcyrmgF699avnhwjolEpr+veeF8owCR45GADAwrfSbedayai
SKbDijHa/ah32PRTUxsDht9dlkyOICK6ZqQjz94BNGFZc+nBEAO0fzkpNhwi
omu2YtSILLw/Uz2Z/W6EAdn/mKJ12YnoBV3t7o0deP9yUFL+wSgDbnxIHfk4
TUD3La+yngMCEiiq8Xs3xYCl8ESW6BwCOtwW/iokiYA8Bx2jxBYYULXu/cdY
lYCeuql/5XUiooYivk5PGgPGJcKoV0QIaC9n2VA53vfkMJmkhdMZwGXImNrP
QkByxrknVf8Q0TQjGLwYDHAbEKI+qRlE8rqOyS+Yh9C8g3Gu1CIDtkwZvLV7
PYj2DXKfijk+hCRP6CrG4vyMz3aWFd1BNCuWOe1zewiN59RO9eH895P7gad3
DSJPfraWo++HUCFPJhsJ57s7bpsebB1AJ3eHEb5WDiHXsBNFP3EevGz25lfY
AHoWd116dH4IRTd+lbuA86tJ/kc2XR1ACVxT2RRxEuI+oJSUgvu5e3uR0hLP
ALLy1fEvv0pCIifatNvwc502/xwR19GPHJx/fTXxIyFfP8ywGtfBriNLjPGh
H9U31IrkZZOQkboK83NcN3GaVzyzUT9iTWZb6RwiobXL9a/Y5vHzRifU/9rT
j2Q0+c8Wcw0jMV9DfvdZ3E+Xa4mX3/ehwTEl6XrnYRRlWxxpOs0AhYPeTpKG
fcj9otbAXPQwGnk8Qdo+yYDLtxL25nL1IaesTsHe+mF0Evm3N5IZsBCvGDod
1Iu6vSZ1yQdHUArj82RfNwPm12Rsxnx7kPQcYmrsGkEekkZXrPMYwH/Ib4jt
Zhe6u6ZiQZXFkDd/4IfdPxkwmuwpDfxdiCWuNC3aFEOdz7y9QlNxO93xW6Ta
/qFt9noHF55j6FMQ//6lWAaY7Mou5dP6hz6tZwv+6MDrYiEjDv8ABrAUCYia
SnYi7jiOQQn3USR9+Ts5W4cBtgUcGb39bWinq5Do7sQxxFl1ojznLAPE0ixW
/7xpQzouu2F//RiilvNNP1XC44erhHBLuQ3J8Jb4ZM2OIUsr/3seBxlwdrtO
vEHEXyTmP9LpfGYceQzbsU+t0MFmgNvdSKcVZbgNn11vGkcyrE90ryTQof2I
tq2jUhPqqhbS/fxvAj0yOSQgGk6H779v22161YhOq/wIBdoE6hLue1D2ig6Z
hYnMqKsBvSFff6rNM4koFf77PFzoUJRNTYl0r0dHjD7SvfUmkeC5ep1SZTo8
KuyWGEuqQQ2VdezKxZOoQKrc9Ek9DawDC2x1esuQmEZFYqjrFDo5RjqXWkyD
7yrlOv77y5BVdfWtiy+mEFygxOWm0SDmXac9y61SpOuOWUHUFHp9qt3SNpgG
x2WOuf2o+YVG37LnNvyaQvL/bW69dZkGI5XHfA5W5CNeJTO7Y8tTKCjo7GK0
Gg0Cpet+MUMeEvql2u62bRp9ix5dQrI0MGvIyaopzEGLx2XViDzTSCP4rF8F
Jw2ufwmQvZL2E1l8bdl7SGYa6VVe9JlsWYCeV98fPNv5De1n6OifuDSNfJu1
l0LRAhSVCb6NYCQiDQmnCB/DaSS8vVfo8I8F6EpshXhiHMp8YyBIvj6N0lW2
x5fELIB8x+PyoHefUI/ZFZK1+TRaeOmsoRm8AH6+qb1WVh+QgGOF8IrlNMrt
tKut8V6A9rCkKCnLYLR6AZNKvT2NRGl6FE2nBeAM0+2aXnyGTtuG+/1nM430
c9/5l5ktgHT+WcFFnTtI+1lzn97GPLP1hO4Z3QW4BM5nlwwcQek4x3Z1nD9X
dN5VoLwAzt7Sk/3Kz6Eo32unHm7nH7XwvaLMAjxXy9Knxb8FQhCF1wV/roEv
T2KhwAIYLec/OcYaDilDBY9ScD+1ckLWzm1fAKJBrJKSQjTYGSsVL5lNo8ft
inbti/Ng6cauSJSLh4/Um8+tcR1oV49/vjc2D2uDpqK/zyfBr/CZr5jBNCrM
r9Gsr50HAUyTT9j1OzyvatyjqjmNTjwwLewqmIfOKg7T9QfpEP2Ka0JZZRrt
l4vmpSfPQ84ZGiNHJRO2hPfuslSYRmcu1Cfbv5oHa+ZR0e+q2VB2j+2iqMg0
Un4aK6F/cR4MAmeOLCsUwqU62F4wNYUenKcf1Gyngv5tV/uPruXQGVpqxHZ7
Cm0+YrhCq6JCVL2SyDuZCjj+luXnVb0p5OUWv9SYT4V7knwu9UMVMLLmnTeq
NIWClYj7xj5RQeDx9vxhvSowz+Y5ssA+hRgcHxMWbajQxqT34Mm+WpiJmhEb
S5lEV7mOWQnidWBISEk1PawJOL3US57VTKD1iyKXHGlzwCO1+IGk0gxhz9C9
4OQJ1JelITU+PgfiNWynlrBm0O38fXfHqwlkQtF19WifAwqvwucOoT/wsmrB
w+b8BEqIeunTnjIHM1e36X+2b4W75ien6krH0Y7Y3//Nm8/B4S9bLknPtkGt
eeA56agxdNazlPfPFAV+BFB+C+d3gdbStYiN34ufez1ttzhKgUdNUQHFy12Q
meK9N76VjNI5ngtcHabAC00G3061bhBKQq4638hI1e7Oq5heCnAMrPt11XTD
jz/xgyVXyMg49fKh4EYKhE+QZLa098B2SkLzmcQRdCmjleVCHQUSek9om/H2
wmy+39spjxEU1yolcrKaAqPKHgX213vhQVvnEVOdETRQZs6TUUoBiajvwym9
vdDq95vgMDuMWHa1+3MUUOD8zuxD+QN94GwcQPU7NYym+dm57fMoYPBTcW/p
/n6oKm94cox9GNV/qStdzKHA0EMNO2+LfhgPuhL4uY+E1EfDG1A2BYqEHD2m
P/eDfBI7+590Esoi0x2KsyhQ2sMcxN3fD48nWmZqnpDQYZJ25+RPCgRoMWGj
ggOwpucmE6BPQrI/g9WvbnDV3gwX0wHgNJn4wS5CQu/nr2KUTLzveGi7lhw5
ABIWN++ZzA6hJj2P+SqcM3GUD4R0DsC8sq6ZS+kQkvahfPqD87sGcP4QzyB4
/IiwvxIyhOL98nZw4/aN0i3FHK8MQr1G8uvVm0MoK/e+62ucn45rVb8RPAjX
SI+y3Y/hddmq6dIp3P++wrv3afWDkLCY11W0RkQnJedrRfDz9rok/fzMSoBE
nbKZpiYi4rHvZgVcn+BaW/P3ogSIvNk0/SOaiB4yM50Vy6dATY+r87IZAch7
xHyHTxERNb3+MYbrf6haSN/hEQFC2m22ntpGRCpj7u+Giyjg6LvH9HsEAY7u
LTay7CQgdumemABEgb/rRcFRrQTgOrblrMx9AuKcN9nq2EABAdZWWTF1Inw0
cGSN1h9E6XvaBb/j8fnFv7tiWnAI3Nfs+Qz4+pDirhG98TkKKKhI8qyeGIKj
lh2YRmYvylW4TbJkUMB1RUG5UX8IGp/Sa1e1e9HyFnLvDOscpIxfcEr2HQIe
swHZeo8elDKF+l7tmwNDUfe1kyNDEP3Jfi/b3y40atX79KTpHPSLulILoklw
LOKBA9OzDuT45+zrG7fn4PT9rnXBHBJ8OaJUc42jA5WJPPLIuTsHLJ+nokQa
SJCevpz39mM7GujyucvkMwcrQfrO2xkkmPXztSn52YbSAzqrB5LnYMRv3eo8
3hPxnxe4q0VsRQE7Dt1+ieeHsLJPVPrwMIQdOTSy+Wkj4jrvk2bdQAXWA2e+
MzWMQFSiBNOzwyWIU43X9HkXFUYlTu9y7ByBkMvS+wjWRUiCTbU0dYQKTipO
q/7EEQhPu628L6YAMQWOpu9hmoehnWvQQRsBtjPb+Ix256LDy5pfFE7MgyJv
MY1rPxlu63+d9tqdhiJFnXrXYvG8Tfln/c+SDD7kgz2pbNrojFiS9Gn3BXDI
l7C0qSIDL3U66ZFLEa5j9nj8swXYNhJiYFxPhqyEXR5us8VgvaeBlw1/3ymk
sF9WbCFDwsMvUOH8C45y9ah1fl0AwVu81N9dZHg7HzAsJl8K3rc7eV26FkDD
1vgo1wQZAhoisnhEKuDnsPWeamUajK+tZelwYKBrvaN/qLEW3EUNrZk30WGT
aNTNdh0M4q9cbZ1Ob4Xqt10HY/B+rZ9+6sVdPQwGruyberzaCrYBModU99FB
X4XHffUKBmYeH/scdf/CUJfLxAtFOshGSYWymWDwJ3LYxHn0Lxzke0Q/a08H
MXpCSt0dDDzvDTzs4GvH6/W6m+otdJgICZjo8sFATohTimbSCXOHLvK8jd7o
L+gy9zIwEKe3qv672gMt+qnfD6QwoLr8pMVYJgZRFpai+4J6wP2NUFdeLgP2
vf36ziQbA6GlFqHkyh7o5jlH/NfMgDuist8FCzDg5o6pey3XC9aJ9miFaRG6
BfcfFy/DYKmdh8mVpQ8MP/h9CrZeBGw6WlWpFQMjpu1FLj79cP8F64sxl0Xo
qrt8bHvbxr7N9riWtH4Q3/xUQdV7EYJDg8+1tmPQeT+N1bmrHx4Y6Qe1fViE
ipGsZtUuDCjp7fb2RwagTZlN50v1IhzJlW+PGMAgpJ5UaNE8ACu3vmTHSizB
u9BJU50xDLyyf38InhwEnqB99/87vgThnQmb7o9jkNdql+u7Ma/W2CGlpLoE
fNsuxr6dwOAnmUP2Fi8Brh4/+yrx2hJ8DHoolD6FQVJ5AzfbCQLMXTUrmni+
BPF5Nk1uFAxyb4QJczsTQL1t/zz/wBJokPfKmWzsbQ7gd33VQoCgl+/2iY8t
gc6DT4IUnF91WA1U7CGA52m5FpH5JYh4mO3/jIGBqEnJhZBhAqSNvkEUtmXY
sy6U8mYRg7dRUKLLIMC5O63xcwrL0Ht0eavBMgZFH9V11wWJcMJv1Pbly2V4
lsBxsG4VA9+Zo+OrV4lALttdnPBuGfrUFLZuXcNgde3CBf0bRAgfnCf8iFmG
MymBu9VwLqfF73zpFhF/f1gZJeUsw217lJqE88RfabWGd3H7OZSQN2gZtj0p
zN7Yi6v6TLPZ/D8iMCJJrvb1y/BYpKifgfPRnyUn+TyIYGYhfo2VsAyHuWI8
VdcxYPmx72n8EyKo6aS6lY0vgybEGprhPPnN7vH/fInQ5OH2xGNhGYSoAeIb
89V8j5NaF/yJcEiiuq1m+wrI6rSaJeGcV8a7WOANEe5O/XKy2bMC6usxvPk4
T1l0nysJJkKIzp7gFeEVOM4/6FCzYSfmys49oUQYKzY5JnBiBYKmPW4RN/Yb
X/nZMvqeCOc4R4UTYAV20cZPTWzY6duiZhNOBF5/OXcJnRUIa/vHR8V59/YD
0h8jiJCTPDD17eoKXj9E79rYhxzXJ9niF0kEubsPdQ7dXAHKqY8yG/PSk97K
tyQ/4v47z+h+sV+BA2j//+5b7jmvx7qxb9kqlrtAzG0FyvLt5ze4qQpr3ca8
9NQ/Pv24JyvwOfXTt4156eoDkXm3cb5vQaBj/6sVuG5W9GYZ54OeQ6UY/lw2
gfc7Yt+tAN+HrGgazv9KmTYdwPlSKjFPNGYFsE6Lxhmcd+2Uz9qL+x+Lhi3l
slegp0xcZ2Oe/OoBX24JXIf96kbd6NcKaB5gc27BueCT4hkIIwI9XizXsHYF
tOwszEtx3lh0354zhAgtbmw2wf0rUO5rLLKxb/lHsaBp22siRM2whiuOrsC0
JGea34bOlz9WVL4gggZJm0SeWwHluSRXx41zHfr6w8EP1y27xMhq2yrExSqz
yOI882j/3VYvInD8V85ol1+FrEHZ4Ld4XIk0fslYsCcCdaTfv1l1FZYqqp6Z
49zT5W+BhzURjFgnI9ovrEJjDC/rIZx/Ugte+WJBhNzXo6tbLVdhUeNSRip+
L2647rrPboDrWfiNkzdoFY4WbjVyW8Hz29y/yk4FIhy5HnvySeQqUEl6bntx
fjPt0pOMw0RYvOf/fCFxFZ51BzPn4Peu/OXwi8PiuP80a23u4lXQfqOl17WE
wVr7jNNebiI813rFsm0c92e3BXM1fq/FymRHAscI0OY5mz2qswZlN8paluYw
KNSsrtwdQAC9IsMOd6M1sEkqzRXHOU3+VNIfTwJkhL6n7rJag6YEIytNPM9c
na4wOe5IAN0x6XsOD9dgkE3I3mEGz3vCgV1EPQKQ3mpGZyWvQaWkMgvgeYyp
/sgjIhcBCuWVxa6zrcNNgRFBOgEDD+GW23T2QTgtYc7a+2cdFgOcNh+rxOCu
AtUn/EIffk9yPtVnM6ltWtSsKXLEgL4zh/tMQDtIvXDf1VnEpBaeX8O2yQ6D
2/Uhk5sU2kG2nfXLYBmTms0FzlV1a/y8LHPUdUIb7KGkcEy1MKm5srHdTDbD
QJHZeM97pTbgW3c6MjvBpOZj2iy3+RIG9WcSkh0GWoH8cqIj8gCzGg//S3uu
w7g/uVbMYhzN8KL4iU5XKLPatqwvcYJDZHBRsjg8mFEG9gKsBXmRzGozst07
mPrJ4GGhyjw8UApSzk4SH2KZ1dz5B2Vb/5FBrD39eBtHKbzNSHQxSGdWyzmo
ZH6iiQyH7uoFbWotAa8RZN5ay6zmtj+KQMojA7WO117lQB7MJOkVT68zq5Hq
RJMj/MhwpqQzv6onDsx5LxR0bGFR08mR9f/iTQamojj7h8VRcGGPreEvDha1
sQLWqBceZJhPtfhILXoHj7Etm4IFWdQkn8ceKbUlA0G1J/xBtAdsWqy8I3eS
Re0xoauyWpsMkvNPTufUhKPF8w4h/KosaqoLf96eBjJwCtBqb1M+I35TVwaT
Jouagv3g9v8UyZB/hM4nG5KA5isSDBsN8OfGWdUIiZOhSHKfcHt1CooLMIz+
YcKi5mqxYhEkgNc5HEX1bTbpSObhheYQSxa1nKMXjPI5yaCbxFwf/jwTbX3j
/uyeLYuakt7mG5FbyPBIOn+r7bUs9H//Z6H2///P4n8AssNj7Q==
     "]]}},
  Axes->True,
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(x\\), \\(1\\)]\\)\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(x\\), \\(2\\)]\\)\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(x\\), \\(3\\)]\\)\"", TraditionalForm]},
  ImageMargins->{{79.48437500000021, 122.36249999999961`}, {0., 
   10.868749999999977`}},
  ImageSize->{506.9531250000001, 929.5343750000005},
  Method->{},
  PlotRange->{{-2.4986758922882837`, 
   2.4986748870789177`}, {-0.7499999999979556, 
   0.7499999878737432}, {-0.9499996819502432, 0.9499999997704432}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{2.358986715425182, 1.2891263737414742`, 2.055075392527415},
  ViewVertical->{0.24687721666915274`, -0.721244426667542, 
   2.484355041239014}]], "Output",
 CellChangeTimes->{
  3.635199553054226*^9, 3.635199593847628*^9, {3.635199649287624*^9, 
   3.6351996572912807`*^9}, {3.635199736011051*^9, 3.635199806658724*^9}, 
   3.635200143587925*^9, 3.635200261474174*^9, 3.6352003157878437`*^9, {
   3.635456311468018*^9, 3.635456352368291*^9}, 3.635573109239011*^9, 
   3.6355731562850523`*^9, 3.635573385302109*^9, 3.63557348678948*^9, 
   3.635573578523177*^9, {3.6355736517849894`*^9, 3.6355736573488417`*^9}, 
   3.6355737050692387`*^9, 3.635573738438264*^9, {3.635573867837429*^9, 
   3.635573882120369*^9}, 3.6355741519512587`*^9, {3.635574367933474*^9, 
   3.6355743874484463`*^9}, 3.635574482228547*^9, 3.6356066413042316`*^9, {
   3.635606795730299*^9, 3.635606818699417*^9}, 3.635609921871669*^9, 
   3.635610071440254*^9, 3.635610818769665*^9, 3.6356111880444937`*^9, {
   3.635611256230712*^9, 3.635611269920827*^9}, 3.6356113131439877`*^9, 
   3.6356149580261*^9, {3.635615194061368*^9, 3.635615247443473*^9}, 
   3.635615493907802*^9, 3.635615907663292*^9, 3.635616365192604*^9, 
   3.635616886665842*^9, {3.635617186745973*^9, 3.6356172048889217`*^9}, {
   3.6356175482239656`*^9, 3.635617562429422*^9}, 3.6356175930128803`*^9, {
   3.6356176397704144`*^9, 3.635617651754373*^9}, 3.635619280012628*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"XXX", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"o", "\[Rule]", "over"}], ",", 
      RowBox[{"A1", "\[Rule]", "amp"}], ",", 
      RowBox[{"A2", "\[Rule]", 
       RowBox[{"amp", "/", "2"}]}], ",", 
      RowBox[{"sq", "\[Rule]", "squeeze"}], ",", 
      RowBox[{"p", "->", "period"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", 
     RowBox[{"-", "1"}], ",", "1"}], " ", "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Thick"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(x\), \(1\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(x\), \(2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(x\), \(3\)]\)\>\""}], "}"}]}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 Graphics3DBox[{{}, {}, 
   {Thickness[Large], Line3DBox[CompressedData["
1:eJwUl3k41N8Xx6WiiIishaQoWYpE4UopUpYSJSFbFEK2QvZdyC77vu/LzMd2
bDNmLNn3NYmkbPkmEr/5zT/zPK/nPu/POe977zn3nDJ6dd+UmoqKKvQgFdV+
yv9/JfJZe3vTMB8dT/mRUUfQ//8xtDdDzS++NA2/Jj80Pqdwqg5Zqb44DL16
mhv1bGga2i6ny/TFkdGxwMkzrjEYmr3zbz2qaRosRploR2PJiFw6FRIbgaGR
ubJLHYXTkM6Te8E1hozETWZzBN5jSDBIReVg3DTImlWX1EaREVIldpz2wxBD
F/2Fm97T8JiWMTY2gozoXySbRrthKHs179zA42ngm3SoEnhPRgmfnwn1PceQ
RKOxiKDSNEh71+8bCiSjn1vXM5N1MTR3d/6Tl/g0cLPUT5z2I6Ouc0vXZlQx
5C+ShdOhnYYE58030W6UvLpPWBHPUeIxHoyIqJoCsQiXG33Pyaj7pNWwXD8e
MSx93b6ZNgX/NdL/tHhGRs6pMoG9GB6Fegj4076fgsxErDlZl4yUF9R455Lx
SK6DDhpNpoBvruHpjCoZqb5FSSEmeFRddPfByeNT0KyTHk08R0a6zHxOPFM4
NLUgz6H8dhIqjl5hkO8noUzDr3dEQqpRdfAFUYvnk3Cx0lcATyQhqq5kuuwn
1ShcyC4xV2sSFnfvNvdiJJR2pCus+Vw12nddZ9hXbBKeyuQ+mUsmIRO65NO/
mqqQyb264p75CdjvxjkTYkJC67v7QkNmK1G0CY38I70JuMlGJvJMtSEXq3TX
ioVydPmVwTlJ83EoLLpSIRJCROHFEfd8ZQtR4sOQAzaPx8FETn6Xzo6I+HYt
A0g+BSjgQn/y4p1xYLUeDPfUIaLM7kcHWTvyURL/bGac6Dh0BWrYy54ioln6
UzRbmnlIcpX10OafMXBfi1r5XUJAQyxR+k53stGXlfE3oh/HwDxC1ma9phXd
myFUcH5NQc1G5txBYWOAXdtmSvvYirqjeSaybySjXkm9UmHfMUh9WWy29qYV
4b5dPkCXmohyL7ezK9qOQXLbXsCbK62ojGnOrf1+PMpUPP2m9e4Y1LdnWEsX
t6DuuYd/fDIikOsmf9oD5jEIKZ+7vhPUjFKunRRkkrBH/yLEwkTox+DNpe75
o6bNKN/yZd8p/AtEd5C+UOPgGKRJbOl1yzej1Ok+B3smXfSj43Gw3fYoHO0m
vNVaa0JBuAnaznI9UPul91Lg2yiIZMvtBd1vQi8dPxD5FD1BpDHS/fbcKOAS
PLKZzjchqatdR+PzfSDnvy+WFTOjkLsZ2Xh7XxPSolWki2UOANlVuGk6NgoS
OCGZruJGJORXe0x4LBSoP1nNCfeOgksM7z8VmkYkHEUj6CgYA2/HGD+Hd1P0
X56Ym64G9ChTRcy0Lxae/hBjlfs0CtS5FvkfDQEZRBSdSXWJh2MlJpfEu0bh
TtbvYcJhQOyHz6cfOp0AQkmiSxado+CkIbBtVN6AxpqY9T1IiUBqol5c7BiF
sKzJ1Ne6DYi6VlZq8WUyZA+p95ZQ+EZAuP7Wvga0+ys2JoImFUbqfW7WUvij
mLOk/3Lr0R5rmhT9UCoo6bBP0VP0T375Z/9CvR41XzXIUs9Mg0NlwZJpFK5X
/Xn30X91qOPNvtOatulgGuEy+pYS5/3L+6lbPtYhDfdPNPvkMiDmaa/sFiXf
y7NRq0fnatGdyabhiz2ZoCvPR5NE8cfhPD/fb/9aFLOguRodmwWM3J8kvPtH
gWTIoakvXIuSJ1barJ9mwz321CTWkVHQ4XB4VGtTg4o1567emssBJc/EkDCK
/5LprVbrHDVoXqLa3jouF5LcJN8oTo5SjOQ1amrEUNoNzjOMqnkgq1ynrfZl
FEJInBYXjmLofnqUk39BPhzl7ahYWRuFnpHInqc5OBRnz2ol/qgIaFYuRI1x
UO6FVcc/C2Il+qReOhstXAZ/bUpIkTxj4KJ9Qb3NvBLt2h90WnAsg0vcRvku
AmOwMVdxsZ+uEiW7TWnwN5XBN0Jt5YD4GNg7/Oe3c68CoZ39Jtfvl8OA/RR1
nOoY2On8hYaeMlQp9m4yx6wCDthn5NQGjEHWn1/yKRFFqOVHnf8LrSpwDRBx
p/0wBnsnnsWFfypE0RbZuHshVbCMjD85xI8Bjk5z31G6QqQhRaAaba6CV4Ft
dtX5Y3DoUuUNcM9Hqk1Id0y4GmQlCFjJpzFQePwEd8MsB0m+N3wg+rMaJqQZ
NWu5x+FE2+/uCP40dGvou3HMeTx0NNerE86MQ9u59FOkR6loX3vscKQqHoaE
tKy+iI3DC0UWe+eTKcin+nkIw0s8UDGbyDy6OQ4MKbplY78S0KqZ4R+rLDzE
FNYqHrYeh59R4uaxCdGoO+L8YhktBpUCXq/incfB0eTf5ZQDUWi1idxpcAKD
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
     "]]}},
  Axes->True,
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(x\\), \\(1\\)]\\)\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(x\\), \\(2\\)]\\)\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(x\\), \\(3\\)]\\)\"", TraditionalForm]},
  Method->{},
  PlotRange->{{-0.4999999154777009, 
   0.4999999154777009}, {-0.19999973266214044`, 
   0.1999999999999737}, {-0.0999990118992955, 0.0999999999999474}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.635199156034086*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FORM", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"StringReplace", "[", 
     RowBox[{"#", ",", "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<Power\>\"", "\[RuleDelayed]", "\"\<pow\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<Sqrt\>\"", "\[RuleDelayed]", "\"\<sqrt\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<Sin\>\"", ":>", "\"\<sin\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<Cos\>\"", ":>", "\"\<cos\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<Sec\>\"", ":>", "\"\<sec\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<a\>\"", ":>", "\"\<x[0]\>\""}]}], "\[IndentingNewLine]", 
       "}"}]}], "]"}], ")"}], "&"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"StringReplace", "[", 
   RowBox[{"#1", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\<\"Power\"\>", "\[RuleDelayed]", "\<\"pow\"\>"}], ",", 
      RowBox[{"\<\"Sqrt\"\>", "\[RuleDelayed]", "\<\"sqrt\"\>"}], ",", 
      RowBox[{"\<\"Sin\"\>", "\[RuleDelayed]", "\<\"sin\"\>"}], ",", 
      RowBox[{"\<\"Cos\"\>", "\[RuleDelayed]", "\<\"cos\"\>"}], ",", 
      RowBox[{"\<\"Sec\"\>", "\[RuleDelayed]", "\<\"sec\"\>"}], ",", 
      RowBox[{"\<\"a\"\>", "\[RuleDelayed]", "\<\"x[0]\"\>"}]}], "}"}]}], 
   "]"}], "&"}]], "Output",
 CellChangeTimes->{3.635200841668659*^9, 3.635206425997476*^9, 
  3.637003028258171*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fold", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#1", "<>", "\"\<,\\n\>\"", "<>", "#2"}], "&"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\"\<\\\"\>\"", "~~", "#", "~~", "\"\<\\\"\>\""}], "&"}], "/@", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"FORM", "[", 
         RowBox[{"FORM", "[", 
          RowBox[{"FORM", "[", 
           RowBox[{"FORM", "[", 
            RowBox[{"FORM", "[", 
             RowBox[{"ToString", "[", 
              RowBox[{"CForm", "[", "#", "]"}], "]"}], "]"}], "]"}], "]"}], 
          "]"}], "]"}], "&"}], "/@", "XXX"}], ")"}], ")"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.6352008859517107`*^9, 3.635200890039069*^9}, {
  3.635206373355176*^9, 3.635206393301712*^9}, {3.6356052591513844`*^9, 
  3.635605260730926*^9}, {3.6370030224198112`*^9, 3.637003022915464*^9}}],

Cell[BoxData["\<\"\\\"0\\\",\\n\\\"x[0] + x[0]*sq\\\",\\n\\\"A1*sin(x[0]*p)\\\
\"\"\>"], "Output",
 CellChangeTimes->{3.637008511665777*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.63560671584027*^9, 3.635606717812228*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fold", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#1", "<>", "\"\<,\\n\>\"", "<>", "#2"}], "&"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\"\<\\\"\>\"", "~~", "#", "~~", "\"\<\\\"\>\""}], "&"}], "/@", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"FORM", "[", 
         RowBox[{"FORM", "[", 
          RowBox[{"FORM", "[", 
           RowBox[{"ToString", "[", 
            RowBox[{"CForm", "[", "#", "]"}], "]"}], "]"}], "]"}], "]"}], 
        "&"}], "/@", "d1"}], ")"}], ")"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.6352043319044456`*^9, 3.635204332190938*^9}}],

Cell[BoxData["\<\"\\\"1. + (-1.1 - 1.*sq)/sqrt(pow(1.1 + \
1.*sq,2))\\\",\\n\\\"0.\\\",\\n\\\"0.\\\"\"\>"], "Output",
 CellChangeTimes->{3.6352043325160913`*^9, 3.635204489923462*^9, 
  3.635205590100181*^9, 3.635206662708828*^9, 3.6356060371466627`*^9, 
  3.635610126890521*^9, 3.635610854022427*^9, 3.635611333644187*^9, 
  3.6356149692244387`*^9, 3.6356163769842157`*^9, 3.6356164956011677`*^9, 
  3.6356192885059757`*^9, 3.637003035117525*^9, 3.637004231875082*^9, 
  3.6370042805445957`*^9, 3.637004540449189*^9, 3.6370084127601357`*^9, 
  3.637008516040506*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fold", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#1", "<>", "\"\<,\\n\>\"", "<>", "#2"}], "&"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\"\<\\\"\>\"", "~~", "#", "~~", "\"\<\\\"\>\""}], "&"}], "/@", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"FORM", "[", 
         RowBox[{"FORM", "[", 
          RowBox[{"FORM", "[", 
           RowBox[{"ToString", "[", 
            RowBox[{"CForm", "[", "#", "]"}], "]"}], "]"}], "]"}], "]"}], 
        "&"}], "/@", "d2"}], ")"}], ")"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.6352043361195307`*^9, 3.6352043364220953`*^9}}],

Cell[BoxData["\<\"\\\"0.\\\",\\n\\\"(A1*p*(-1.1 - \
1.*sq)*cos(x[0]*p))/(sqrt(pow(1.1 + \
1.*sq,2))*sqrt((1.0000000000000002*pow(1.1 + 2.1*sq + 1.*pow(sq,2) + \
0.1*sqrt(pow(1.1 + 1.*sq,2)),2))/pow(1.1 + 1.*sq,2) + \
1.*pow(A1,2)*pow(p,2)*pow(cos(x[0]*p),2)))\\\",\\n\\\"-1. + (0.1*(11. + \
21.*sq + 10.*pow(sq,2) + 1.*sqrt(pow(1.1 + 1.*sq,2))))/(sqrt(pow(1.1 + \
1.*sq,2))*sqrt((1.0000000000000002*pow(1.1 + 2.1*sq + 1.*pow(sq,2) + \
0.1*sqrt(pow(1.1 + 1.*sq,2)),2))/pow(1.1 + 1.*sq,2) + \
1.*pow(A1,2)*pow(p,2)*pow(cos(x[0]*p),2)))\\\"\"\>"], "Output",
 CellChangeTimes->{
  3.635204336750732*^9, 3.635204390534898*^9, 3.635205612304406*^9, 
   3.635206685836289*^9, 3.63560604020205*^9, 3.63560607405016*^9, 
   3.6356101530206738`*^9, {3.635610856169429*^9, 3.6356108791534243`*^9}, 
   3.635611335901641*^9, 3.635614972230858*^9, 3.6356163793552113`*^9, 
   3.635616498518671*^9, 3.635619291673781*^9, 3.6370030376030703`*^9, 
   3.637004235874382*^9, 3.637004284000559*^9, 3.6370045429033823`*^9, 
   3.63700841429538*^9, 3.6370085190269938`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fold", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#1", "<>", "\"\<,\\n\>\"", "<>", "#2"}], "&"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\"\<\\\"\>\"", "~~", "#", "~~", "\"\<\\\"\>\""}], "&"}], "/@", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"FORM", "[", 
          RowBox[{"FORM", "[", 
           RowBox[{"FORM", "[", 
            RowBox[{"ToString", "[", 
             RowBox[{"CForm", "[", "#", "]"}], "]"}], "]"}], "]"}], "]"}], 
         "&"}], "/@", "YYY"}], ")"}], "~", "Join", "~", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"FORM", "[", 
          RowBox[{"FORM", "[", 
           RowBox[{"FORM", "[", 
            RowBox[{"ToString", "[", 
             RowBox[{"CForm", "[", "#", "]"}], "]"}], "]"}], "]"}], "]"}], 
         "&"}], "/@", "d1"}], ")"}], "~", "Join", "~", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"FORM", "[", 
          RowBox[{"FORM", "[", 
           RowBox[{"FORM", "[", 
            RowBox[{"ToString", "[", 
             RowBox[{"CForm", "[", "#", "]"}], "]"}], "]"}], "]"}], "]"}], 
         "&"}], "/@", "d2"}], ")"}]}], "\[IndentingNewLine]", ")"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.635200847995603*^9, 3.635200858170879*^9}}],

Cell[BoxData["\<\"\\\"x[0] + x[0]*sq + (A1*p*(-1.1 - \
1.*sq)*y2*cos(x[0]*p))/(sqrt(pow(1.1 + \
1.*sq,2))*sqrt((1.0000000000000002*pow(1.1 + 2.1*sq + 1.*pow(sq,2) + \
0.1*sqrt(pow(1.1 + 1.*sq,2)),2))/pow(1.1 + 1.*sq,2) + \
1.*pow(A1,2)*pow(p,2)*pow(cos(x[0]*p),2)))\\\",\\n\\\"((1.1 + \
1.*sq)*y1)/sqrt(pow(1.1 + 1.*sq,2))\\\",\\n\\\"(0.1*(11. + 21.*sq + \
10.*pow(sq,2) + 1.*sqrt(pow(1.1 + 1.*sq,2)))*y2)/(sqrt(pow(1.1 + \
1.*sq,2))*sqrt((1.0000000000000002*pow(1.1 + 2.1*sq + 1.*pow(sq,2) + \
0.1*sqrt(pow(1.1 + 1.*sq,2)),2))/pow(1.1 + 1.*sq,2) + \
1.*pow(A1,2)*pow(p,2)*pow(cos(x[0]*p),2))) + A1*sin(x[0]*p)\\\",\\n\\\"(-1. - \
1.*sq)/sqrt(0.010000000000000002 + pow(1. + 1.*sq,2))\\\",\\n\\\"-1. + \
0.1/sqrt(0.010000000000000002 + pow(1. + \
1.*sq,2))\\\",\\n\\\"0.\\\",\\n\\\"(-0.1*A1*p*cos(x[0]*p))/(sqrt(0.\
010000000000000002 + pow(1. + 1.*sq,2))*sqrt((1.0101 + 4.*pow(sq,3) + \
1.*pow(sq,4) + 0.2*sqrt(1.01 + 2.*sq + 1.*pow(sq,2)) + pow(sq,2)*(6.01 + \
0.2*sqrt(1.01 + 2.*sq + 1.*pow(sq,2))) + sq*(4.02 + 0.4*sqrt(1.01 + 2.*sq + \
1.*pow(sq,2))) + pow(A1,2)*pow(p,2)*(1.01 + 2.*sq + \
1.*pow(sq,2))*pow(cos(x[0]*p),2))/(1.01 + 2.*sq + \
1.*pow(sq,2))))\\\",\\n\\\"(A1*p*(-1. - \
1.*sq)*cos(x[0]*p))/(sqrt(0.010000000000000002 + pow(1. + \
1.*sq,2))*sqrt((1.0101 + 4.*pow(sq,3) + 1.*pow(sq,4) + 0.2*sqrt(1.01 + 2.*sq \
+ 1.*pow(sq,2)) + pow(sq,2)*(6.01 + 0.2*sqrt(1.01 + 2.*sq + 1.*pow(sq,2))) + \
sq*(4.02 + 0.4*sqrt(1.01 + 2.*sq + 1.*pow(sq,2))) + pow(A1,2)*pow(p,2)*(1.01 \
+ 2.*sq + 1.*pow(sq,2))*pow(cos(x[0]*p),2))/(1.01 + 2.*sq + 1.*pow(sq,2))))\\\
\",\\n\\\"-1. + (1. + 2.*sq + 1.*pow(sq,2) + 0.1*sqrt(1.01 + 2.*sq + \
1.*pow(sq,2)))/(sqrt(0.010000000000000002 + pow(1. + 1.*sq,2))*sqrt((1.0101 + \
4.*pow(sq,3) + 1.*pow(sq,4) + 0.2*sqrt(1.01 + 2.*sq + 1.*pow(sq,2)) + \
pow(sq,2)*(6.01 + 0.2*sqrt(1.01 + 2.*sq + 1.*pow(sq,2))) + sq*(4.02 + \
0.4*sqrt(1.01 + 2.*sq + 1.*pow(sq,2))) + pow(A1,2)*pow(p,2)*(1.01 + 2.*sq + \
1.*pow(sq,2))*pow(cos(x[0]*p),2))/(1.01 + 2.*sq + 1.*pow(sq,2))))\\\"\"\>"], \
"Output",
 CellChangeTimes->{3.635200860502638*^9, 3.637004238169197*^9}]
}, Open  ]]
},
WindowSize->{838, 756},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
ShowSelection->True,
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 20, \
2012)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 736, 22, 114, "Input"],
Cell[1296, 44, 873, 24, 114, "Input"],
Cell[CellGroupData[{
Cell[2194, 72, 1725, 43, 199, "Input"],
Cell[3922, 117, 160, 3, 28, "Output"],
Cell[4085, 122, 184, 5, 48, "Output"],
Cell[4272, 129, 150, 3, 28, "Output"],
Cell[4425, 134, 147, 3, 28, "Output"],
Cell[4575, 139, 523, 16, 28, "Output"],
Cell[5101, 157, 201, 5, 28, "Output"],
Cell[5305, 164, 201, 5, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5543, 174, 229, 8, 28, "Input"],
Cell[5775, 184, 707, 23, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6519, 212, 529, 15, 28, "Input"],
Cell[7051, 229, 4342, 122, 105, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11430, 356, 2156, 66, 130, "Input"],
Cell[13589, 424, 1207, 24, 59, "Output"],
Cell[14799, 450, 3916, 101, 195, "Output"],
Cell[18718, 553, 1263, 25, 59, "Output"],
Cell[19984, 580, 4008, 104, 195, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24029, 689, 431, 13, 28, "Input"],
Cell[24463, 704, 2367, 74, 234, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26867, 783, 1982, 64, 114, "Input"],
Cell[28852, 849, 11311, 306, 513, "Output"],
Cell[40166, 1157, 10186, 252, 275, "Output"],
Cell[50355, 1411, 5659, 160, 256, "Output"],
Cell[56017, 1573, 25582, 664, 796, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81636, 2242, 416, 9, 28, "Input"],
Cell[82055, 2253, 3749, 108, 195, "Output"]
}, Open  ]],
Cell[85819, 2364, 316, 8, 28, "Input"],
Cell[CellGroupData[{
Cell[86160, 2376, 3106, 66, 131, "Input"],
Cell[89269, 2444, 99122, 1635, 955, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[188428, 4084, 824, 22, 63, "Input"],
Cell[189255, 4108, 44837, 744, 227, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[234129, 4857, 821, 19, 165, "Input"],
Cell[234953, 4878, 657, 14, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[235647, 4897, 946, 24, 80, "Input"],
Cell[236596, 4923, 140, 2, 63, "Output"]
}, Open  ]],
Cell[236751, 4928, 91, 1, 28, "Input"],
Cell[CellGroupData[{
Cell[236867, 4933, 710, 20, 80, "Input"],
Cell[237580, 4955, 567, 8, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[238184, 4968, 712, 20, 80, "Input"],
Cell[238899, 4990, 1052, 16, 131, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239988, 5011, 1395, 39, 131, "Input"],
Cell[241386, 5052, 2090, 31, 505, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
